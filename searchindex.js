Search.setIndex({"docnames": ["000/install", "000/load", "000/tutorial", "010/graph_dataset", "010/link_dataset", "010/node_dataset", "030/common", "030/graph", "030/link", "030/node", "040/common", "040/graph", "040/link", "040/node", "050/bare", "050/cgnn", "050/ergnn", "050/ewc", "050/gem", "050/hat", "050/lwf", "050/mas", "050/packnet", "050/piggyback", "050/twp", "060/metric", "060/performance", "070/linear", "index"], "filenames": ["000/install.rst", "000/load.rst", "000/tutorial.rst", "010/graph_dataset.rst", "010/link_dataset.rst", "010/node_dataset.rst", "030/common.rst", "030/graph.rst", "030/link.rst", "030/node.rst", "040/common.rst", "040/graph.rst", "040/link.rst", "040/node.rst", "050/bare.rst", "050/cgnn.rst", "050/ergnn.rst", "050/ewc.rst", "050/gem.rst", "050/hat.rst", "050/lwf.rst", "050/mas.rst", "050/packnet.rst", "050/piggyback.rst", "050/twp.rst", "060/metric.rst", "060/performance.rst", "070/linear.rst", "index.rst"], "titles": ["Install and Setup", "Load Custom Scenarios", "Tutorial", "Datasets for Graph-Level Problems", "Datasets for Link-Level Problems", "Datasets for Node-Level Problems", "Common framework", "Graph-level problems", "Link-level problems", "Node-level problems", "Common framework", "Graph-level problems", "Link-level problems", "Node-level problems", "Bare Model", "ContinualGNN", "ER-GNN", "EWC", "GEM", "HAT", "LwF", "MAS", "PackNet", "Piggyback", "TWP", "Metrics for CL", "Basic Performance Metrics", "AdaptiveLinear", "Welcome to BeGin Tutorials and Documentation!"], "terms": {"begin": [0, 1, 2, 6, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "work": 0, "follow": [0, 2, 5, 6, 10, 14, 25], "python": 0, "packag": 0, "pytorch": [0, 10], "1": [0, 1, 3, 4, 5, 6, 10, 11, 12, 13, 25], "8": [0, 2, 3, 4, 5], "dgl": [0, 1, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 24], "0": [0, 1, 2, 3, 5, 6, 10], "6": [0, 3, 4, 5], "ogb": [0, 3, 5], "3": [0, 1, 3, 4, 5, 6, 8, 9], "4": [0, 3, 5, 6], "torch": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27], "scatter": 0, "2": [0, 1, 3, 4, 5, 6, 25], "spars": 0, "9": [0, 3, 5], "geometr": 0, "dgllife": 0, "rdkit": [0, 3], "pypi": 0, "For": [0, 1, 2, 3, 4, 5, 6, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28], "run": [0, 2, 10, 11, 12, 13, 19], "some": [0, 2, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "exampl": [0, 2, 5, 7, 8, 9], "you": [0, 1], "mai": [0, 2], "need": [0, 1, 2, 6, 10, 14, 17, 18, 19, 20, 21, 22, 23, 24], "addit": [0, 1, 2, 10, 19, 26, 27, 28], "quadprog": 0, "cvxpy": 0, "qpth": 0, "can": [0, 1, 2, 6, 7, 8, 9, 10, 26, 27], "command": 0, "pip": 0, "e": [0, 2, 4, 6, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24], "support": [1, 2, 3, 4, 5, 10, 27], "user": [1, 2, 4, 5, 6, 10, 26, 28], "defin": [1, 2], "who": [1, 4], "want": 1, "benchmark": [1, 2, 3, 4, 5, 6, 10, 28], "In": [1, 2, 5, 10, 15, 19, 22, 23, 25, 28], "thi": [1, 2, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26], "materi": [1, 2], "we": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "briefli": [1, 2], "describ": [1, 2], "how": [1, 2, 21], "sinc": [1, 3, 4, 17, 18, 19, 20, 21, 22, 24, 28], "v0": 1, "scenarioload": [1, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26], "input": [1, 2, 3, 26, 27], "argument": [1, 2, 6, 10], "dataset_load_func": [1, 9], "below": [1, 2, 28], "provid": [1, 2, 5, 6, 25, 26, 27, 28], "an": [1, 2, 3, 4, 5, 10, 27, 28], "ncscenarioload": [1, 2, 9], "from": [1, 2, 3, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28], "node": [1, 2, 3, 4, 6, 10, 11, 12, 28], "import": [1, 2, 15, 21, 24], "dataset_nam": [1, 2, 6, 7, 8, 9], "custom_dataset_nam": 1, "name_of_custom_funct": 1, "current": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26], "requir": [1, 2, 16, 24], "differ": [1, 2, 6, 7, 8, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25], "output": [1, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 24, 26, 27], "function": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26], "depend": [1, 3, 6, 22], "target": [1, 2, 6, 7, 8, 9, 10, 19, 25, 26], "problem": [1, 2, 6, 10, 28], "classif": [1, 2, 3, 5, 7, 8, 11, 12, 13, 28], "nc": [1, 2, 6, 13], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27], "should": [1, 2], "dictionari": [1, 2, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "kei": [1, 10], "graph": [1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 15, 16, 28], "num_feat": [1, 2], "num_class": [1, 2, 6], "dglgraph": 1, "It": [1, 2, 7, 8, 9], "contain": [1, 2, 3, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "featur": [1, 3, 4, 5, 6, 27], "ndata": [1, 2], "feat": 1, "ground": [1, 2, 6, 7, 8, 9, 26], "truth": [1, 2, 6, 7, 8, 9, 26], "label": [1, 2, 3, 4, 5, 6, 7, 8, 9], "time": [1, 2, 3, 4, 5, 6, 8, 10], "il": [1, 2, 3, 4, 5, 14, 17, 18, 19, 20, 21, 22, 23, 24], "inform": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24], "construct": [1, 3, 4, 5], "task": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "addition": [1, 2, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "domain": [1, 2, 3, 4, 5, 6, 7, 10], "valu": [1, 2, 3, 5, 10, 11, 12, 13, 15, 19, 23], "greater": 1, "than": 1, "equal": 1, "num_task": [1, 2, 6, 7, 8, 9, 26], "ignor": [1, 7, 8, 9, 26], "dure": [1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26], "train": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28], "evalu": [1, 5, 6, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26], "process": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28], "int": [1, 2, 6, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27], "number": [1, 3, 4, 5, 6, 10, 11, 12, 13, 26, 27], "match": 1, "link": [1, 2, 6, 10, 11, 13, 15, 28], "lc": [1, 2, 6, 12], "edata": 1, "predict": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28], "lp": [1, 2, 6, 12], "tvt_split": 1, "neg_edg": [1, 6], "onli": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 23], "undirect": [1, 4], "therefor": [1, 6, 10], "edg": [1, 2, 3, 4, 5, 6, 24], "satisfi": 1, "longtensor": 1, "val": [1, 7, 8, 9], "test": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 24], "split": [1, 3, 5, 6, 7, 8, 9], "tensor": [1, 6, 7, 8, 9, 26, 27], "indic": [1, 3, 4, 5, 6, 25], "correspond": [1, 2, 3, 5, 6], "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 18, 23, 27], "valid": [1, 2, 5, 6, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24, 28], "respect": [1, 2, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 24], "Its": [1, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 24], "shape": [1, 2, 10, 11, 12, 13], "num_edg": 1, "dict": [1, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "neg": [1, 3, 6], "type": [1, 3, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 24], "gc": [1, 2, 6, 11], "domain_info": 1, "option": [1, 2, 6, 10, 11, 12, 13], "time_info": 1, "iter": [1, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "object": [1, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "which": [1, 2, 3, 5, 15, 16, 18, 19, 22, 23, 24, 26, 27, 28], "each": [1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 15, 19, 22, 23, 25, 26, 27], "len": 1, "consid": [1, 2, 4, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24], "One": 1, "easiest": 1, "wai": 1, "write": 1, "extract": [1, 5], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28], "coragraphdataset": 1, "def": [1, 2], "save_path": [1, 2, 6, 7, 8, 9], "raw_dir": 1, "verbos": [1, 2, 27], "fals": [1, 7, 8, 9, 10, 11, 12, 13, 15, 23, 24, 27], "Then": [1, 10], "_g": 1, "now": 1, "all": [1, 2, 6, 7, 8, 9, 10, 25], "just": [1, 2], "ad": 1, "one": [1, 2, 3, 4, 5], "line": [1, 2], "return": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27], "framework": [2, 5, 26, 27, 28], "core": 2, "compon": 2, "modul": [2, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28], "built": 2, "continu": [2, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27], "learn": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "scenario": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26], "method": [2, 3, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24], "basic": [2, 6, 25, 28], "answer": [2, 26], "manag": [2, 10, 18, 27], "overal": [2, 10, 11, 12, 13], "procedur": [2, 3, 26, 27], "includ": [2, 6, 7, 8, 9, 10], "prepar": [2, 10], "dataload": [2, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 24], "so": [2, 3], "have": [2, 10], "implement": [2, 6, 7, 8, 9, 10, 19, 23, 26, 28], "novel": [2, 10], "part": [2, 6, 10, 28], "those": 2, "order": [2, 6, 28], "cl": [2, 14, 28], "dataset": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27], "multi": [2, 3], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27], "timestamp": [2, 3, 4], "increment": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 28], "proper": 2, "To": 2, "reduc": [2, 10, 11, 12, 13], "effort": 2, "variou": 2, "relat": 2, "load": [2, 6, 7, 8, 9, 28], "ogbn": [2, 28], "arxiv": [2, 3, 4, 28], "code": [2, 6, 10], "accuraci": [2, 6, 8, 9], "incr_typ": [2, 6, 7, 8, 9, 10], "19": [2, 5], "consist": [2, 3, 5], "vari": [2, 6], "thei": [2, 3, 4, 5], "ar": [2, 3, 4, 5, 10, 21, 23], "often": 2, "disjoint": 2, "queri": [2, 26], "thu": 2, "its": [2, 4, 5], "among": [2, 3, 4, 5], "appli": [2, 14, 16], "where": [2, 3, 4, 5, 6, 28], "fix": [2, 6, 10], "grow": 2, "over": 2, "NOT": 2, "seen": [2, 27], "far": 2, "divid": [2, 3, 4, 5], "entiti": 2, "accord": [2, 3, 4, 6, 7, 8, 9, 10, 17, 21, 22], "given": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26], "except": 2, "dynam": 2, "evolv": 2, "across": [2, 3], "th": [2, 4, 5, 25], "snapshot": 2, "group": [2, 3, 4, 5], "assign": 2, "chronolog": 2, "usabl": 2, "when": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 23, 26], "new": [2, 3, 18, 20], "As": 2, "avalanch": 2, "seri": 2, "event": [2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "subprocess": 2, "receiv": 2, "b": 2, "model": [2, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28], "c": [2, 3, 5, 28], "handl": [2, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "necessari": 2, "befor": [2, 4, 5, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "after": [2, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "modular": [2, 28], "fill": 2, "out": [2, 3, 4], "proce": 2, "note": 2, "If": [2, 6, 10, 11, 12, 13, 15, 23, 27], "pre": 2, "oper": 2, "do": 2, "whole": [2, 6], "see": [2, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "here": [2, 10], "detail": [2, 6, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28], "role": [2, 5, 10, 19], "overrid": 2, "call": [2, 10, 11, 12, 13, 15, 23, 26], "onc": 2, "prepareload": [2, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 24], "gener": [2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "processbeforetrain": [2, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "right": [2, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "termin": 2, "everi": [2, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "batch": [2, 7, 8, 9, 13, 26], "optim": [2, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "singl": 2, "outcom": [2, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "processevaliter": [2, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24], "infer": [2, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24], "beforeinfer": [2, 10, 11, 12, 13, 18, 23], "_reducetrainingstat": [2, 10], "end": [2, 10, 11, 12, 13, 15, 23], "statist": [2, 3, 4, 5], "_reduceevalstat": [2, 10], "processtraininglog": [2, 10, 11, 12, 13], "reducetrainingstat": 2, "log": [2, 10, 11, 12, 13], "procssaftereachiter": 2, "reduceevalstat": 2, "determin": [2, 10, 11, 12, 13, 15, 23, 27], "whether": [2, 3, 5, 10, 11, 12, 13, 15, 19, 22, 23], "stop": [2, 10, 11, 12, 13, 15, 23], "complet": [2, 28], "suppos": 2, "elast": [2, 17], "consolid": [2, 17], "ewc": [2, 15, 28], "specif": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 26], "l2": 2, "equat": 2, "mathcal": 2, "l": [2, 3, 5, 6], "theta": 2, "_i": 2, "sum_": [2, 25], "j": [2, 25], "frac": [2, 25], "lambda": [2, 10], "f_j": 2, "_j": 2, "until": 2, "hyperparamet": [2, 10], "diagon": [2, 17], "squar": 2, "first": [2, 4, 5, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 24, 28], "deriv": 2, "make": [2, 4], "behavior": [2, 10, 14, 15, 17, 18, 20, 21, 24], "exactli": [2, 3], "same": [2, 3, 4, 5, 14, 15, 17, 18, 20, 21, 24], "bare": [2, 28], "substitut": 2, "default": [2, 10, 16], "ones": 2, "nctrainer": [2, 13, 14], "ncclassilewctrain": [2, 17], "pass": [2, 6, 10], "aforment": 2, "matric": 2, "howev": 2, "cannot": 2, "obtain": [2, 3], "resolv": 2, "issu": 2, "training_st": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "intermedi": 2, "result": [2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27], "share": 2, "form": [2, 4, 5], "paramet": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27], "modifi": 2, "self": [2, 4], "param": 2, "henc": 2, "them": [2, 3, 4, 16, 18], "natur": [2, 3], "curr_training_st": [2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "task_id": [2, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27], "curr_dataset": [2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "curr_model": [2, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "curr_optim": [2, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "super": [2, 3], "name": [2, 6, 19], "zeros_lik": 2, "p": [2, 4], "named_paramet": 2, "train_load": 2, "total_num_item": 2, "_curr_batch": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "enumer": 2, "zero_grad": 2, "curr_result": 2, "loss": [2, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24], "backward": 2, "curr_num_item": 2, "clone": 2, "detach": 2, "grad": 2, "append": 2, "abov": [2, 10], "backpropag": [2, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24], "previous": [2, 20, 27], "loss_reg": 2, "also": [2, 27], "ha": [2, 4, 5, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24], "sum": 2, "up": 2, "_param": 2, "_fisher": 2, "zip": 2, "lamb": 2, "total_loss": 2, "item": 2, "acc": 2, "eval_fn": 2, "pred": [2, 6, 7, 8, 9], "argmax": 2, "devic": [2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "present": 2, "under": [2, 6], "similarli": [2, 5], "develop": 2, "without": [2, 20, 25], "refer": [2, 28], "explan": 2, "last": [2, 27], "experi": 2, "take": [2, 3], "few": 2, "gcn": [2, 5], "256": 2, "dropout": 2, "25": [2, 3], "optimizer_fn": [2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "x": [2, 10, 27], "adam": 2, "lr": 2, "1e": 2, "loss_fn": [2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "nn": [2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27], "crossentropyloss": 2, "ignore_index": 2, "cuda": 2, "scheduler_fn": 2, "lr_schedul": 2, "reducelronplateau": 2, "mode": 2, "min": 2, "patienc": 2, "20": [2, 3, 28], "min_lr": 2, "arg": [2, 27], "001": 2, "true": [2, 6, 7, 8, 9, 10, 22, 27], "epoch_per_task": [2, 10, 11, 12, 13], "1000": 2, "learnabl": 2, "scenraio": 2, "schedul": [2, 10], "other": [2, 3, 5], "auxilari": 2, "custom": [2, 3, 28], "creat": [2, 26], "start": 2, "member": 2, "measur": [2, 6, 7, 8, 9, 25], "entri": 2, "final": [2, 10, 11, 12, 13, 25], "design": [2, 28], "averag": [2, 3, 4, 10], "ap": [2, 10, 11, 12, 13], "forget": [2, 20, 22, 23], "af": [2, 10, 11, 12, 13], "between": [2, 3, 4, 5, 20, 25], "forward": [2, 27], "transfer": 2, "fwt": [2, 10, 11, 12, 13], "intransig": 2, "joint": [2, 6, 7, 8, 9, 10, 25], "full_mod": [2, 10], "simultan": 2, "enabl": 2, "imag": 3, "convert": [3, 5], "pixel": 3, "There": 3, "10": [3, 4, 5, 7], "partit": 3, "5": [3, 4, 5], "separ": [3, 4, 6, 28], "accumul": [3, 4, 6, 7, 8, 9], "origin": [3, 4, 5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "paper": [3, 4, 5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "slic": 3, "build": 3, "k": [3, 6], "nearest": 3, "neighbor": 3, "adjac": 3, "matrix": [3, 10, 11, 12, 13, 17, 25], "55": 3, "000": 3, "70": [3, 5], "564": 3, "set": [3, 4, 5, 6, 7, 8, 9, 10, 15, 27, 28], "cite": [3, 4, 5], "articl": [3, 4, 5], "dwivedi2020benchmark": 3, "titl": [3, 4, 5], "neural": [3, 4, 24], "network": [3, 4, 5, 22, 23, 24], "author": [3, 4, 5], "dwivedi": 3, "vijai": 3, "prakash": 3, "joshi": 3, "chaitanya": 3, "laurent": 3, "thoma": 3, "bengio": [3, 5], "yoshua": 3, "bresson": 3, "xavier": 3, "journal": [3, 4, 5], "preprint": [3, 4], "2003": 3, "00982": 3, "year": [3, 4, 5], "2020": [3, 4, 5], "achanta2012sl": 3, "superpixel": 3, "compar": 3, "state": [3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "art": 3, "achanta": 3, "radhakrishna": 3, "shaji": 3, "appu": 3, "smith": 3, "kevin": 3, "lucchi": 3, "aurelien": 3, "fua": 3, "pascal": 3, "": [3, 4, 19], "u": [3, 4], "sstrunk": 3, "sabin": 3, "ieee": 3, "transact": 3, "pattern": 3, "analysi": 3, "machin": [3, 4, 5], "intellig": 3, "volum": [3, 4, 5], "34": 3, "11": [3, 4], "page": [3, 4, 5], "2274": 3, "2282": 3, "2012": 3, "publish": [3, 4, 5], "45": 3, "117": 3, "941": 3, "molecul": 3, "atom": 3, "chemic": 3, "bond": 3, "repres": 3, "30": 3, "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27], "formul": [3, 4, 5], "extern": [3, 4], "degre": [3, 4], "868": [3, 4], "29": [3, 5], "7": [3, 4, 5, 8], "65": 3, "wu2018moleculenet": 3, "moleculenet": 3, "molecular": 3, "wu": [3, 4, 5], "zhenqin": 3, "ramsundar": 3, "bharath": 3, "feinberg": 3, "evan": 3, "n": [3, 25], "gome": 3, "joseph": 3, "geniess": 3, "caleb": 3, "pappu": 3, "aneesh": 3, "lesw": 3, "karl": 3, "pand": 3, "scienc": [3, 4, 5], "513": 3, "530": 3, "2018": [3, 4, 5], "royal": 3, "societi": 3, "chemistri": 3, "xiong2019push": 3, "push": 3, "boundari": 3, "represent": 3, "drug": 3, "discoveri": [3, 5], "attent": [3, 19, 24], "mechan": [3, 24], "xiong": 3, "zhaop": 3, "wang": [3, 4, 5], "dingyan": 3, "liu": [3, 4, 5], "xiaohong": 3, "zhong": 3, "feisheng": 3, "wan": 3, "xiaozh": 3, "li": [3, 5], "xutong": 3, "zhaojun": 3, "luo": 3, "xiaomin": 3, "chen": 3, "kaixian": 3, "jiang": 3, "hualiang": 3, "medicin": 3, "63": 3, "16": 3, "8749": 3, "8760": 3, "2019": [3, 4, 5], "binari": [3, 4, 5, 22, 23], "inhibit": 3, "hiv": 3, "viru": 3, "replic": 3, "structur": [3, 5], "similar": [3, 19], "scaffold": 3, "dimension": [3, 5], "chiral": 3, "41": 3, "127": 3, "27": 3, "misc": [3, 5], "landrum2006rdkit": 3, "open": [3, 4, 5], "sourc": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27], "cheminformat": 3, "landrum": 3, "greg": 3, "2006": 3, "inproceed": [3, 4, 5], "hu2020open": [3, 4, 5], "hu": [3, 4, 5], "weihua": [3, 4, 5], "fei": [3, 4, 5], "matthia": [3, 4, 5], "zitnik": [3, 4, 5], "marinka": [3, 4, 5], "dong": [3, 4, 5], "yuxiao": [3, 4, 5], "ren": [3, 4, 5], "hongyu": [3, 4, 5], "bowen": [3, 4, 5], "catasta": [3, 4, 5], "michel": [3, 4, 5], "leskovec": [3, 4, 5], "jure": [3, 4, 5], "booktitl": [3, 4, 5], "neurip": [3, 4, 5], "show": 3, "amount": 3, "traffic": 3, "locat": 3, "york": 3, "citi": 3, "hour": 3, "2021": [3, 5], "exist": [3, 4], "direct": [3, 4], "two": [3, 4, 5], "weight": [3, 4, 17, 19, 20, 21, 22, 23, 24], "date": 3, "12": [3, 28], "weekdai": 3, "mon": 3, "fri": 3, "weekend": 3, "sat": 3, "sun": 3, "posit": 3, "bronx": 3, "brooklyn": 3, "ewr": 3, "manhattan": 3, "queen": 3, "staten": 3, "island": 3, "unknown": 3, "760": 3, "265": 3, "1597": 3, "nyctaxi": 3, "tlc": 3, "trip": 3, "record": 3, "limousin": 3, "commiss": 3, "howpublish": 3, "http": 3, "www": 3, "gov": 3, "site": 3, "about": 3, "protein": [3, 28], "interact": [3, 4], "37": 3, "what": 3, "taxonom": 3, "speci": [3, 5], "come": 3, "sampl": [3, 16, 18], "100": [3, 5], "wa": 3, "per": 3, "duplic": 3, "associ": [3, 5], "element": 3, "approxim": 3, "confid": 3, "particular": 3, "gene": 3, "co": [3, 4, 5], "occurr": 3, "fusion": 3, "express": [3, 25], "40": [3, 5], "700": 3, "243": 3, "2266": 3, "szklarczyk2019str": [3, 5], "string": [3, 5], "v11": [3, 5], "increas": [3, 5, 18], "coverag": [3, 5], "genom": [3, 5], "wide": [3, 5], "experiment": [3, 5], "szklarczyk": [3, 5], "damian": [3, 5], "gabl": [3, 5], "annika": [3, 5], "lyon": [3, 5], "david": [3, 5], "jung": [3, 5], "alexand": [3, 5], "wyder": [3, 5], "stefan": [3, 5], "huerta": [3, 5], "cepa": [3, 5], "jaim": [3, 5], "simonov": [3, 5], "milan": [3, 5], "doncheva": [3, 5], "nadezhda": [3, 5], "t": [3, 4, 5, 10], "morri": [3, 5], "john": [3, 5], "h": [3, 5], "bork": [3, 5], "peer": [3, 5], "nucleic": [3, 5], "acid": [3, 5], "research": [3, 5], "47": [3, 5], "d1": [3, 5], "d607": [3, 5], "d613": [3, 5], "techreport": 3, "hug2016new": 3, "A": [3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "view": 3, "tree": 3, "life": 3, "microbiologi": 3, "16048": 3, "hug": 3, "la": 3, "baker": 3, "bj": 3, "anantharaman": 3, "brown": 3, "ct": 3, "probst": 3, "aj": 3, "castel": 3, "cj": 3, "banfield": 3, "jf": 3, "2016": [3, 4], "institut": 3, "retriev": [3, 10], "04": 3, "com": 3, "nmicrobiol201648": 3, "zitnik2019evolut": 3, "evolut": 3, "resili": 3, "interactom": 3, "sosi": 3, "v": [3, 4], "rok": 3, "feldman": 3, "marcu": 3, "w": 3, "proceed": [3, 4], "nation": 3, "academi": 3, "116": 3, "4426": 3, "4433": 3, "acad": 3, "pars": 3, "tweet": 3, "spaci": 3, "librari": 3, "token": 3, "embed": [3, 4, 5], "post": 3, "dai": 3, "500": 3, "13": 3, "43": 3, "23": 3, "71": 3, "300": [3, 4], "go2009twitt": 3, "twitter": 3, "distant": 3, "supervis": 3, "go": 3, "alec": 3, "bhayani": 3, "richa": 3, "huang": [3, 4, 5], "lei": 3, "cs224n": 3, "project": 3, "report": 3, "stanford": 3, "2009": [3, 5], "trust": 4, "whom": 4, "trade": 4, "platform": 4, "integ": 4, "rate": [4, 23], "sign": 4, "881": 4, "35": [4, 5], "592": 4, "21": [4, 5], "kumar2016edg": 4, "kumar": 4, "srijan": 4, "spezzano": 4, "francesca": 4, "subrahmanian": 4, "faloutso": 4, "christo": 4, "icdm": 4, "kumar2018rev2": 4, "rev2": 4, "fraudul": 4, "hooi": 4, "bryan": 4, "makhija": 4, "disha": 4, "mohit": 4, "wsdm": 4, "hyperlink": 4, "comput": [4, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 21, 23, 24, 26], "subfield": 4, "belong": [4, 5], "54": 4, "endpoint": 4, "pretrain": 4, "glove": 4, "701": 4, "431": 4, "726": 4, "mernyei2020wiki": 4, "wikipedia": 4, "mernyei": 4, "ter": 4, "cangea": 4, "lina": 4, "2007": 4, "02901": 4, "authorship": 4, "public": [4, 5], "50": [4, 8], "due": 4, "imbal": 4, "1971": 4, "subsequ": [4, 5], "1969": 4, "235": 4, "285": 4, "465": 4, "128": [4, 5], "wang2020microsoft": [4, 5], "microsoft": [4, 5], "academ": [4, 5], "expert": [4, 5], "enough": [4, 5], "kuansan": [4, 5], "shen": [4, 5], "zhihong": [4, 5], "chiyuan": [4, 5], "chieh": [4, 5], "han": [4, 5], "kanakia": [4, 5], "anshul": [4, 5], "quantit": [4, 5], "studi": [4, 5], "396": [4, 5], "413": [4, 5], "social": 4, "categori": [4, 5], "mutual": [4, 5], "like": 4, "within": 4, "134": 4, "833": 4, "380": 4, "293": 4, "rozemberczki2019gemsec": 4, "gemsec": 4, "cluster": [4, 5], "rozemberczki": [4, 5], "benedek": [4, 5], "davi": 4, "ryan": 4, "sarkar": [4, 5], "rik": [4, 5], "sutton": 4, "charl": 4, "asonam": 4, "69": 4, "occur": 4, "month": 4, "159": 4, "313": 4, "507": 4, "988": 4, "paranjape2017motif": 4, "motif": 4, "tempor": 4, "paranjap": 4, "ashwin": 4, "benson": 4, "austin": 4, "r": 4, "tenth": 4, "acm": 4, "intern": 4, "confer": 4, "web": 4, "search": 4, "mine": 4, "601": 4, "610": 4, "2017": 4, "citat": 5, "scientif": 5, "field": 5, "word": 5, "vector": 5, "absenc": 5, "presenc": 5, "select": [5, 16], "six": 5, "seven": 5, "three": [5, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 24], "708": 5, "556": 5, "433": 5, "sen2008collect": 5, "collect": [5, 10], "sen": 5, "prithviraj": 5, "namata": 5, "galileo": 5, "bilgic": 5, "mustafa": 5, "getoor": 5, "lise": 5, "galligh": 5, "brian": 5, "eliassi": 5, "rad": 5, "tina": 5, "ai": 5, "magazin": 5, "93": 5, "2008": 5, "327": 5, "104": 5, "703": 5, "793": 5, "126": 5, "842": 5, "710": 5, "bojchevski2018deep": 5, "deep": 5, "gaussian": 5, "unsupervis": 5, "induct": 5, "via": 5, "rank": 5, "aleksandar": 5, "bojchevski": 5, "stephan": 5, "g\u00fcnnemann": 5, "iclr": 5, "2010": 5, "word2vec": 5, "while": [5, 18], "349": 5, "257": 5, "more": 5, "newli": 5, "reveal": 5, "736": 5, "389": 5, "832": 5, "542": 5, "purchas": 5, "descript": 5, "449": 5, "029": 5, "61": 5, "859": 5, "140": 5, "chiang2019clust": 5, "effici": 5, "algorithm": [5, 28], "larg": 5, "convolut": 5, "chiang": 5, "wei": 5, "lin": 5, "xuanq": 5, "si": 5, "yang": 5, "sami": 5, "hsieh": 5, "cho": 5, "jui": 5, "kdd": 5, "meaning": 5, "112": 5, "avail": 5, "our": [5, 6, 10, 19, 23, 26, 27], "perform": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28], "mean": 5, "neighborhood": [5, 13], "aggreg": [5, 24], "132": 5, "534": 5, "39": 5, "561": 5, "252": 5, "2x112": 5, "subject": 5, "area": 5, "24": 5, "1998": 5, "1996": 5, "169": 5, "343": 5, "232": 5, "486": 5, "relationship": 5, "join": 5, "affili": 5, "program": [5, 18], "broadcast": 5, "languag": 5, "168": 5, "114": 5, "797": 5, "557": 5, "rozemberczki2021twitch": 5, "gamer": 5, "proxim": 5, "preserv": 5, "eprint": 5, "2101": 5, "03091": 5, "archiveprefix": 5, "primaryclass": 5, "sceanrio": 6, "loader": [6, 7, 8, 9, 10, 26], "respons": 6, "commun": 6, "sesir": 6, "further": 6, "level": [6, 10, 28], "basescenarioload": [6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24], "metric": [6, 7, 8, 9, 10, 11, 12, 13, 28], "kwarg": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27], "str": [6, 7, 8, 9, 10], "path": 6, "file": 6, "save": [6, 15], "spec": [6, 7, 8, 9], "aucroc": [6, 8], "hit": [6, 8], "keyword": [6, 10], "g": [6, 10], "task_shuffl": [6, 7, 8, 9], "bool": [6, 19, 22, 27], "els": 6, "random": [6, 10], "_init_continual_scenario": [6, 7, 8, 9], "entir": [6, 7, 8, 9], "initi": [6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25], "_update_accumulated_dataset": [6, 7, 8, 9], "updat": [6, 7, 8, 9, 15, 19], "previou": [6, 7, 8, 9, 15, 18, 20], "_update_target_dataset": [6, 7, 8, 9], "export_dataset": 6, "full": 6, "export": 6, "flexibl": 6, "format": [6, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 24], "global": 6, "ndata_feat": 6, "id": [6, 23, 26, 27], "mask": [6, 19, 22, 23, 27], "train_mask": 6, "val_mask": 6, "test_mask": 6, "observ": [6, 27], "test_edg": 6, "test_label": 6, "otherwis": [6, 27], "val_edg": 6, "val_label": 6, "test_indic": 6, "train_indic": 6, "val_indic": 6, "boolean": [6, 10, 11, 12, 13, 15, 23], "both": 6, "infom": 6, "get_accumulated_dataset": 6, "get_current_dataset": 6, "next_task": [6, 7, 8, 9], "denot": [6, 7, 8, 9, 25], "gcscenarioload": 7, "sceanario": [7, 8, 9], "usag": [7, 8, 9], "ogbg": [7, 28], "molhiv": [7, 28], "rocauc": 7, "_get_eval_result_inn": [7, 8, 9], "target_split": [7, 8, 9], "inner": [7, 8, 9, 27], "get_eval_result": [7, 8, 9], "get_accum_eval_result": [7, 8, 9], "get_current_dataset_for_export": [7, 8, 9], "_global": [7, 8, 9], "get_simple_eval_result": [7, 8, 9, 26], "curr_batch_pr": [7, 8, 9], "curr_batch_gt": [7, 8, 9], "configur": [7, 8, 9, 26], "empti": [7, 8, 9], "lcscenarioload": 8, "bitcoin": [8, 28], "lpscenarioload": 8, "ogbl": [8, 28], "collab": [8, 28], "dataset_object": 9, "none": [9, 10, 27], "load_node_dataset": 9, "trainer": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "procudur": 10, "extend": [10, 17, 18, 19, 20, 21, 22, 24, 26, 28], "inherit": 10, "assum": 10, "adaptivelinear": [10, 28], "classifi": 10, "basetrain": [10, 11, 12, 13], "gpu": 10, "instanc": [10, 18, 26], "tranin": 10, "seed": 10, "accum": [10, 27], "_evalwrapp": 10, "curr_batch": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "curr_stat": 10, "wrapper": 10, "main": [10, 23], "processevalitear": 10, "stat": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "evalut": 10, "epoch": [10, 11, 12, 13, 15, 23], "minibatch": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "store": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "helper": [10, 11, 12, 13], "_reset_model": 10, "target_model": 10, "reiniti": 10, "re": [10, 16], "_reset_optim": 10, "target_optim": 10, "_trainwrapp": 10, "processtrainitear": 10, "afterinfer": [10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24], "execut": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "step": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24], "recommend": [10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24], "properti": 10, "curr_task": 10, "index": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27], "inittrainingst": [10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24], "intermedei": [10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24], "optmiz": [10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24], "predictionformat": [10, 11, 12, 13], "feed": [10, 11, 12, 13], "dgldataset": [10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 24], "tupl": [10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 24], "second": [10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 24, 26], "third": [10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 24], "processaftereachiter": [10, 11, 12, 13, 15, 23], "curr_iter_result": [10, 11, 12, 13, 15, 23], "processaftertrain": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24], "processtrainiter": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24], "epoch_cnt": [10, 11, 12, 13], "val_metric_result": [10, 11, 12, 13], "train_stat": [10, 11, 12, 13], "val_stat": [10, 11, 12, 13], "conta": [10, 11, 12, 13], "maximum": [10, 11, 12, 13], "And": [10, 11, 12, 13], "gctrainer": 11, "common": [11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 28], "lctrainer": [12, 14], "_curr_dataset": [12, 14, 17, 18, 20, 21, 24], "lptrainer": [12, 14], "ncminibatchtrain": [13, 14], "mini": 13, "sampler": [13, 16], "scheme": 14, "techniqu": [14, 19], "ncclassilbareminibatchtrain": 14, "ncclassilbaretrain": 14, "ncdomainilbaretrain": 14, "nctaskilbaretrain": 14, "nctimeilbaretrain": 14, "lcclassilbaretrain": 14, "lctaskilbaretrain": 14, "lctimeilbaretrain": 14, "lpdomainilbaretrain": 14, "lptimeilbaretrain": 14, "gcclassilbaretrain": 14, "gcdomainilbaretrain": 14, "gctaskilbaretrain": 14, "gctimeilbaretrain": 14, "mehtod": 15, "combin": [15, 28], "replai": [15, 18], "regular": [15, 17, 21, 24], "approach": 15, "ncclassilcgnntrain": 15, "put": 15, "buffer": [15, 16], "memori": [15, 18, 21], "handler": 15, "choos": 15, "ncdomainilcgnntrain": 15, "nctaskilcgnntrain": 15, "nctimeilcgnntrain": 15, "carefulli": 16, "topolog": [16, 24], "ncclassilergnnminibatchtrain": 16, "ergnn": 16, "cm": 16, "ncclassilergnntrain": 16, "ncdomainilergnntrain": 16, "nctaskilergnntrain": 16, "nctimeilergnntrain": 16, "fisher": 17, "ncclassilewcminibatchtrain": 17, "penalti": [17, 21], "term": [17, 21], "ncdomainilewctrain": 17, "nctaskilewctrain": 17, "nctimeilewctrain": 17, "lcclassilewctrain": 17, "lctaskilewctrain": 17, "lctimeilewctrain": 17, "slightli": [17, 18, 19, 20, 21, 22, 24], "lpdomainilewctrain": 17, "lptimeilewctrain": 17, "gcclassilewctrain": 17, "gcdomainilewctrain": 17, "gctaskilewctrain": 17, "gctimeilewctrain": 17, "gradient": [18, 22, 23], "episod": 18, "prevent": [18, 22, 23], "ncclassilgemminibatchtrain": 18, "control": 18, "quadrat": 18, "futur": 18, "ncclassilgemtrain": 18, "ncdomainilgemtrain": 18, "nctaskilgemtrain": 18, "nctimeilgemtrain": 18, "lcclassilgemtrain": 18, "lctaskilgemtrain": 18, "lctimeilgemtrain": 18, "lpdomainilgemtrain": 18, "lptimeilgemtrain": 18, "gcclassilgemtrain": 18, "gcdomainilgemtrain": 18, "gctaskilgemtrain": 18, "gctimeilgemtrain": 18, "isol": [19, 22, 23], "real": [19, 23, 28], "plai": 19, "layer": [19, 27], "nctaskilhattrain": 19, "introduc": 19, "use_mask": [19, 22], "criterion": 19, "get_mask": 19, "m": [19, 25], "get_view_for": 19, "minim": 20, "ncclassillwfminibatchtrain": 20, "knowledg": 20, "distil": 20, "ncclassillwftrain": 20, "ncdomainillwftrain": 20, "nctaskillwftrain": 20, "nctimeillwftrain": 20, "lcclassillwftrain": 20, "lctaskillwftrain": 20, "lctimeillwftrain": 20, "lpdomainillwftrain": 20, "lptimeillwftrain": 20, "gcclassillwftrain": 20, "gcdomainillwftrain": 20, "gctaskillwftrain": 20, "gctimeillwftrain": 20, "awar": 21, "synaps": 21, "sensit": 21, "ncclassilmasminibatchtrain": 21, "ncclassilmastrain": 21, "ncdomainilmastrain": 21, "nctaskilmastrain": 21, "nctimeilmastrain": 21, "lcclassilmastrain": 21, "lctaskilmastrain": 21, "lctimeilmastrain": 21, "lpdomainilmastrain": 21, "lptimeilmastrain": 21, "gcclassilmastrain": 21, "gcdomainilmastrain": 21, "gctaskilmastrain": 21, "gctimeilmastrain": 21, "nctaskilpacknettrain": 22, "parametr": 22, "packnet_mask": 22, "magnitud": 22, "nctaskilpiggybacktrain": 23, "restor": 23, "get": 23, "binar": 23, "ternar": 23, "synchron": 23, "stabil": 24, "through": 24, "ncclassiltwpminibatchtrain": 24, "return_elist": 24, "ncclassiltwptrain": 24, "ncdomainiltwptrain": 24, "nctaskiltwptrain": 24, "nctimeiltwptrain": 24, "lcclassiltwptrain": 24, "lctaskiltwptrain": 24, "lctimeiltwptrain": 24, "lpdomainiltwptrain": 24, "lptimeiltwptrain": 24, "gcclassiltwptrain": 24, "gcdomainiltwptrain": 24, "gctaskiltwptrain": 24, "gctimeiltwptrain": 24, "mathemat": 25, "mathrm": 25, "_": 25, "r_i": 25, "randomli": 25, "ani": [25, 27], "r_": 25, "auroc": 26, "q": 26, "easili": [26, 28], "own": [26, 28], "simple_ev": 26, "accuracyevalu": 26, "rocaucevalu": 26, "score": 26, "hitsevalu": 26, "instead": 26, "linear": 27, "variabl": 27, "ideal": 27, "help": 27, "in_channel": 27, "channel": 27, "in_featur": 27, "out_channel": 27, "out_featur": 27, "bia": 27, "logit": 27, "task_mask": 27, "get_output_mask": 27, "observe_output": 27, "new_output": 27, "By": 27, "easi": 28, "fool": 28, "proof": 28, "reusabl": 28, "next": 28, "elimin": 28, "potenti": 28, "mistak": 28, "31": 28, "world": 28, "cover": 28, "pleas": 28, "instal": 28, "setup": 28, "cora": 28, "cites": 28, "coraful": 28, "mag": 28, "product": 28, "twitch": 28, "otc": 28, "wiki": 28, "facebook": 28, "askubuntu": 28, "mnist": 28, "cifar10": 28, "aromat": 28, "nyc": 28, "taxi": 28, "ppa": 28, "sentiment": 28, "lwf": 28, "ma": 28, "gem": 28, "twp": 28, "er": 28, "gnn": 28, "continualgnn": 28, "packnet": 28, "piggyback": 28, "hat": 28}, "objects": {"begin.algorithms.bare": [[14, 0, 0, "-", "graphs"], [14, 0, 0, "-", "links"], [14, 0, 0, "-", "nodes"]], "begin.algorithms.bare.graphs": [[14, 1, 1, "", "GCClassILBareTrainer"], [14, 1, 1, "", "GCDomainILBareTrainer"], [14, 1, 1, "", "GCTaskILBareTrainer"], [14, 1, 1, "", "GCTimeILBareTrainer"]], "begin.algorithms.bare.graphs.GCTaskILBareTrainer": [[14, 2, 1, "", "inference"]], "begin.algorithms.bare.links": [[14, 1, 1, "", "LCClassILBareTrainer"], [14, 1, 1, "", "LCTaskILBareTrainer"], [14, 1, 1, "", "LCTimeILBareTrainer"], [14, 1, 1, "", "LPDomainILBareTrainer"], [14, 1, 1, "", "LPTimeILBareTrainer"]], "begin.algorithms.bare.links.LCTaskILBareTrainer": [[14, 2, 1, "", "inference"], [14, 2, 1, "", "prepareLoader"]], "begin.algorithms.bare.nodes": [[14, 1, 1, "", "NCClassILBareMinibatchTrainer"], [14, 1, 1, "", "NCClassILBareTrainer"], [14, 1, 1, "", "NCDomainILBareTrainer"], [14, 1, 1, "", "NCTaskILBareTrainer"], [14, 1, 1, "", "NCTimeILBareTrainer"]], "begin.algorithms.bare.nodes.NCTaskILBareTrainer": [[14, 2, 1, "", "inference"]], "begin.algorithms.cgnn": [[15, 0, 0, "-", "nodes"]], "begin.algorithms.cgnn.nodes": [[15, 1, 1, "", "NCClassILCGNNTrainer"], [15, 1, 1, "", "NCDomainILCGNNTrainer"], [15, 1, 1, "", "NCTaskILCGNNTrainer"], [15, 1, 1, "", "NCTimeILCGNNTrainer"]], "begin.algorithms.cgnn.nodes.NCClassILCGNNTrainer": [[15, 2, 1, "", "initTrainingStates"], [15, 2, 1, "", "prepareLoader"], [15, 2, 1, "", "processAfterEachIteration"], [15, 2, 1, "", "processAfterTraining"], [15, 2, 1, "", "processBeforeTraining"], [15, 2, 1, "", "processTrainIteration"]], "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer": [[15, 2, 1, "", "initTrainingStates"], [15, 2, 1, "", "prepareLoader"], [15, 2, 1, "", "processAfterEachIteration"], [15, 2, 1, "", "processAfterTraining"], [15, 2, 1, "", "processBeforeTraining"], [15, 2, 1, "", "processEvalIteration"], [15, 2, 1, "", "processTrainIteration"]], "begin.algorithms.ergnn": [[16, 0, 0, "-", "nodes"]], "begin.algorithms.ergnn.nodes": [[16, 1, 1, "", "NCClassILERGNNMinibatchTrainer"], [16, 1, 1, "", "NCClassILERGNNTrainer"], [16, 1, 1, "", "NCDomainILERGNNTrainer"], [16, 1, 1, "", "NCTaskILERGNNTrainer"], [16, 1, 1, "", "NCTimeILERGNNTrainer"]], "begin.algorithms.ergnn.nodes.NCClassILERGNNMinibatchTrainer": [[16, 2, 1, "", "afterInference"], [16, 2, 1, "", "inference"], [16, 2, 1, "", "initTrainingStates"], [16, 2, 1, "", "processAfterTraining"], [16, 2, 1, "", "processBeforeTraining"]], "begin.algorithms.ergnn.nodes.NCClassILERGNNTrainer": [[16, 2, 1, "", "afterInference"], [16, 2, 1, "", "inference"], [16, 2, 1, "", "initTrainingStates"], [16, 2, 1, "", "processAfterTraining"]], "begin.algorithms.ergnn.nodes.NCTaskILERGNNTrainer": [[16, 2, 1, "", "afterInference"], [16, 2, 1, "", "inference"], [16, 2, 1, "", "initTrainingStates"], [16, 2, 1, "", "processAfterTraining"]], "begin.algorithms.ergnn.nodes.NCTimeILERGNNTrainer": [[16, 2, 1, "", "initTrainingStates"], [16, 2, 1, "", "processAfterTraining"], [16, 2, 1, "", "processTrainIteration"]], "begin.algorithms.ewc": [[17, 0, 0, "-", "graphs"], [17, 0, 0, "-", "links"], [17, 0, 0, "-", "nodes"]], "begin.algorithms.ewc.graphs": [[17, 1, 1, "", "GCClassILEWCTrainer"], [17, 1, 1, "", "GCDomainILEWCTrainer"], [17, 1, 1, "", "GCTaskILEWCTrainer"], [17, 1, 1, "", "GCTimeILEWCTrainer"]], "begin.algorithms.ewc.graphs.GCClassILEWCTrainer": [[17, 2, 1, "", "afterInference"], [17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"]], "begin.algorithms.ewc.graphs.GCTaskILEWCTrainer": [[17, 2, 1, "", "afterInference"], [17, 2, 1, "", "inference"], [17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"]], "begin.algorithms.ewc.links": [[17, 1, 1, "", "LCClassILEWCTrainer"], [17, 1, 1, "", "LCTaskILEWCTrainer"], [17, 1, 1, "", "LCTimeILEWCTrainer"], [17, 1, 1, "", "LPDomainILEWCTrainer"], [17, 1, 1, "", "LPTimeILEWCTrainer"]], "begin.algorithms.ewc.links.LCClassILEWCTrainer": [[17, 2, 1, "", "afterInference"], [17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"]], "begin.algorithms.ewc.links.LCTaskILEWCTrainer": [[17, 2, 1, "", "afterInference"], [17, 2, 1, "", "inference"], [17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "prepareLoader"], [17, 2, 1, "", "processAfterTraining"]], "begin.algorithms.ewc.links.LCTimeILEWCTrainer": [[17, 2, 1, "", "afterInference"], [17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"], [17, 2, 1, "", "processBeforeTraining"], [17, 2, 1, "", "processEvalIteration"]], "begin.algorithms.ewc.links.LPTimeILEWCTrainer": [[17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"], [17, 2, 1, "", "processTrainIteration"]], "begin.algorithms.ewc.nodes": [[17, 1, 1, "", "NCClassILEWCMinibatchTrainer"], [17, 1, 1, "", "NCClassILEWCTrainer"], [17, 1, 1, "", "NCDomainILEWCTrainer"], [17, 1, 1, "", "NCTaskILEWCTrainer"], [17, 1, 1, "", "NCTimeILEWCTrainer"]], "begin.algorithms.ewc.nodes.NCClassILEWCMinibatchTrainer": [[17, 2, 1, "", "afterInference"], [17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"]], "begin.algorithms.ewc.nodes.NCClassILEWCTrainer": [[17, 2, 1, "", "afterInference"], [17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"]], "begin.algorithms.ewc.nodes.NCTaskILEWCTrainer": [[17, 2, 1, "", "afterInference"], [17, 2, 1, "", "inference"], [17, 2, 1, "", "initTrainingStates"], [17, 2, 1, "", "processAfterTraining"]], "begin.algorithms.gem": [[18, 0, 0, "-", "graphs"], [18, 0, 0, "-", "links"], [18, 0, 0, "-", "nodes"]], "begin.algorithms.gem.graphs": [[18, 1, 1, "", "GCClassILGEMTrainer"], [18, 1, 1, "", "GCDomainILGEMTrainer"], [18, 1, 1, "", "GCTaskILGEMTrainer"], [18, 1, 1, "", "GCTimeILGEMTrainer"]], "begin.algorithms.gem.graphs.GCClassILGEMTrainer": [[18, 2, 1, "", "afterInference"], [18, 2, 1, "", "beforeInference"], [18, 2, 1, "", "initTrainingStates"], [18, 2, 1, "", "processAfterTraining"], [18, 2, 1, "", "processBeforeTraining"]], "begin.algorithms.gem.graphs.GCTaskILGEMTrainer": [[18, 2, 1, "", "afterInference"], [18, 2, 1, "", "beforeInference"], [18, 2, 1, "", "inference"], [18, 2, 1, "", "initTrainingStates"], [18, 2, 1, "", "processAfterTraining"], [18, 2, 1, "", "processBeforeTraining"]], "begin.algorithms.gem.links": [[18, 1, 1, "", "LCClassILGEMTrainer"], [18, 1, 1, "", "LCTaskILGEMTrainer"], [18, 1, 1, "", "LCTimeILGEMTrainer"], [18, 1, 1, "", "LPDomainILGEMTrainer"], [18, 1, 1, "", "LPTimeILGEMTrainer"]], "begin.algorithms.gem.links.LCClassILGEMTrainer": [[18, 2, 1, "", "afterInference"], [18, 2, 1, "", "beforeInference"], [18, 2, 1, "", "initTrainingStates"], [18, 2, 1, "", "processAfterTraining"]], "begin.algorithms.gem.links.LCTaskILGEMTrainer": [[18, 2, 1, "", "afterInference"], [18, 2, 1, "", "beforeInference"], [18, 2, 1, "", "inference"], [18, 2, 1, "", "initTrainingStates"], [18, 2, 1, "", "prepareLoader"], [18, 2, 1, "", "processAfterTraining"]], "begin.algorithms.gem.links.LCTimeILGEMTrainer": [[18, 2, 1, "", "afterInference"], [18, 2, 1, "", "beforeInference"], [18, 2, 1, "", "initTrainingStates"], [18, 2, 1, "", "processAfterTraining"], [18, 2, 1, "", "processBeforeTraining"], [18, 2, 1, "", "processEvalIteration"]], "begin.algorithms.gem.links.LPTimeILGEMTrainer": [[18, 2, 1, "", "initTrainingStates"], [18, 2, 1, "", "processAfterTraining"], [18, 2, 1, "", "processBeforeTraining"], [18, 2, 1, "", "processTrainIteration"]], "begin.algorithms.gem.nodes": [[18, 1, 1, "", "NCClassILGEMMinibatchTrainer"], [18, 1, 1, "", "NCClassILGEMTrainer"], [18, 1, 1, "", "NCDomainILGEMTrainer"], [18, 1, 1, "", "NCTaskILGEMTrainer"], [18, 1, 1, "", "NCTimeILGEMTrainer"]], "begin.algorithms.gem.nodes.NCClassILGEMMinibatchTrainer": [[18, 2, 1, "", "afterInference"], [18, 2, 1, "", "beforeInference"], [18, 2, 1, "", "initTrainingStates"], [18, 2, 1, "", "processAfterTraining"]], "begin.algorithms.gem.nodes.NCClassILGEMTrainer": [[18, 2, 1, "", "afterInference"], [18, 2, 1, "", "beforeInference"], [18, 2, 1, "", "initTrainingStates"], [18, 2, 1, "", "processAfterTraining"]], "begin.algorithms.gem.nodes.NCTaskILGEMTrainer": [[18, 2, 1, "", "afterInference"], [18, 2, 1, "", "beforeInference"], [18, 2, 1, "", "inference"], [18, 2, 1, "", "initTrainingStates"], [18, 2, 1, "", "processAfterTraining"]], "begin.algorithms.hat": [[19, 0, 0, "-", "nodes"]], "begin.algorithms.hat.nodes": [[19, 1, 1, "", "NCTaskILHATTrainer"]], "begin.algorithms.hat.nodes.NCTaskILHATTrainer": [[19, 2, 1, "", "afterInference"], [19, 2, 1, "", "criterion"], [19, 2, 1, "", "get_mask"], [19, 2, 1, "", "get_view_for"], [19, 2, 1, "", "inference"], [19, 2, 1, "", "initTrainingStates"], [19, 2, 1, "", "processAfterTraining"], [19, 2, 1, "", "processBeforeTraining"], [19, 2, 1, "", "processEvalIteration"], [19, 2, 1, "", "processTrainIteration"]], "begin.algorithms.lwf": [[20, 0, 0, "-", "graphs"], [20, 0, 0, "-", "links"], [20, 0, 0, "-", "nodes"]], "begin.algorithms.lwf.graphs": [[20, 1, 1, "", "GCClassILLwFTrainer"], [20, 1, 1, "", "GCDomainILLwFTrainer"], [20, 1, 1, "", "GCTaskILLwFTrainer"], [20, 1, 1, "", "GCTimeILLwFTrainer"]], "begin.algorithms.lwf.graphs.GCClassILLwFTrainer": [[20, 2, 1, "", "afterInference"], [20, 2, 1, "", "processAfterTraining"]], "begin.algorithms.lwf.graphs.GCTaskILLwFTrainer": [[20, 2, 1, "", "afterInference"], [20, 2, 1, "", "inference"], [20, 2, 1, "", "processBeforeTraining"]], "begin.algorithms.lwf.links": [[20, 1, 1, "", "LCClassILLwFTrainer"], [20, 1, 1, "", "LCTaskILLwFTrainer"], [20, 1, 1, "", "LCTimeILLwFTrainer"], [20, 1, 1, "", "LPDomainILLwFTrainer"], [20, 1, 1, "", "LPTimeILLwFTrainer"]], "begin.algorithms.lwf.links.LCClassILLwFTrainer": [[20, 2, 1, "", "afterInference"], [20, 2, 1, "", "processAfterTraining"]], "begin.algorithms.lwf.links.LCTaskILLwFTrainer": [[20, 2, 1, "", "afterInference"], [20, 2, 1, "", "inference"], [20, 2, 1, "", "prepareLoader"], [20, 2, 1, "", "processBeforeTraining"]], "begin.algorithms.lwf.links.LCTimeILLwFTrainer": [[20, 2, 1, "", "afterInference"], [20, 2, 1, "", "processAfterTraining"], [20, 2, 1, "", "processBeforeTraining"], [20, 2, 1, "", "processEvalIteration"]], "begin.algorithms.lwf.links.LPTimeILLwFTrainer": [[20, 2, 1, "", "processAfterTraining"], [20, 2, 1, "", "processTrainIteration"]], "begin.algorithms.lwf.nodes": [[20, 1, 1, "", "NCClassILLwFMinibatchTrainer"], [20, 1, 1, "", "NCClassILLwFTrainer"], [20, 1, 1, "", "NCDomainILLwFTrainer"], [20, 1, 1, "", "NCTaskILLwFTrainer"], [20, 1, 1, "", "NCTimeILLwFTrainer"]], "begin.algorithms.lwf.nodes.NCClassILLwFMinibatchTrainer": [[20, 2, 1, "", "afterInference"], [20, 2, 1, "", "processAfterTraining"]], "begin.algorithms.lwf.nodes.NCClassILLwFTrainer": [[20, 2, 1, "", "afterInference"], [20, 2, 1, "", "processAfterTraining"]], "begin.algorithms.lwf.nodes.NCTaskILLwFTrainer": [[20, 2, 1, "", "afterInference"], [20, 2, 1, "", "inference"], [20, 2, 1, "", "processBeforeTraining"]], "begin.algorithms.mas": [[21, 0, 0, "-", "graphs"], [21, 0, 0, "-", "links"], [21, 0, 0, "-", "nodes"]], "begin.algorithms.mas.graphs": [[21, 1, 1, "", "GCClassILMASTrainer"], [21, 1, 1, "", "GCDomainILMASTrainer"], [21, 1, 1, "", "GCTaskILMASTrainer"], [21, 1, 1, "", "GCTimeILMASTrainer"]], "begin.algorithms.mas.graphs.GCClassILMASTrainer": [[21, 2, 1, "", "afterInference"], [21, 2, 1, "", "initTrainingStates"], [21, 2, 1, "", "processAfterTraining"]], "begin.algorithms.mas.graphs.GCTaskILMASTrainer": [[21, 2, 1, "", "afterInference"], [21, 2, 1, "", "inference"], [21, 2, 1, "", "initTrainingStates"], [21, 2, 1, "", "processAfterTraining"]], "begin.algorithms.mas.links": [[21, 1, 1, "", "LCClassILMASTrainer"], [21, 1, 1, "", "LCTaskILMASTrainer"], [21, 1, 1, "", "LCTimeILMASTrainer"], [21, 1, 1, "", "LPDomainILMASTrainer"], [21, 1, 1, "", "LPTimeILMASTrainer"]], "begin.algorithms.mas.links.LCClassILMASTrainer": [[21, 2, 1, "", "afterInference"], [21, 2, 1, "", "initTrainingStates"], [21, 2, 1, "", "processAfterTraining"]], "begin.algorithms.mas.links.LCTaskILMASTrainer": [[21, 2, 1, "", "afterInference"], [21, 2, 1, "", "inference"], [21, 2, 1, "", "initTrainingStates"], [21, 2, 1, "", "prepareLoader"], [21, 2, 1, "", "processAfterTraining"]], "begin.algorithms.mas.links.LCTimeILMASTrainer": [[21, 2, 1, "", "afterInference"], [21, 2, 1, "", "initTrainingStates"], [21, 2, 1, "", "processAfterTraining"], [21, 2, 1, "", "processBeforeTraining"], [21, 2, 1, "", "processEvalIteration"]], "begin.algorithms.mas.links.LPTimeILMASTrainer": [[21, 2, 1, "", "initTrainingStates"], [21, 2, 1, "", "processAfterTraining"], [21, 2, 1, "", "processTrainIteration"]], "begin.algorithms.mas.nodes": [[21, 1, 1, "", "NCClassILMASMinibatchTrainer"], [21, 1, 1, "", "NCClassILMASTrainer"], [21, 1, 1, "", "NCDomainILMASTrainer"], [21, 1, 1, "", "NCTaskILMASTrainer"], [21, 1, 1, "", "NCTimeILMASTrainer"]], "begin.algorithms.mas.nodes.NCClassILMASMinibatchTrainer": [[21, 2, 1, "", "afterInference"], [21, 2, 1, "", "initTrainingStates"], [21, 2, 1, "", "processAfterTraining"]], "begin.algorithms.mas.nodes.NCClassILMASTrainer": [[21, 2, 1, "", "afterInference"], [21, 2, 1, "", "initTrainingStates"], [21, 2, 1, "", "processAfterTraining"]], "begin.algorithms.mas.nodes.NCTaskILMASTrainer": [[21, 2, 1, "", "afterInference"], [21, 2, 1, "", "inference"], [21, 2, 1, "", "initTrainingStates"], [21, 2, 1, "", "processAfterTraining"]], "begin.algorithms.packnet": [[22, 0, 0, "-", "nodes"]], "begin.algorithms.packnet.nodes": [[22, 1, 1, "", "NCTaskILPackNetTrainer"]], "begin.algorithms.packnet.nodes.NCTaskILPackNetTrainer": [[22, 2, 1, "", "afterInference"], [22, 2, 1, "", "inference"], [22, 2, 1, "", "initTrainingStates"], [22, 2, 1, "", "processBeforeTraining"], [22, 2, 1, "", "processEvalIteration"], [22, 2, 1, "", "processTrainIteration"]], "begin.algorithms.piggyback": [[23, 0, 0, "-", "nodes"]], "begin.algorithms.piggyback.nodes": [[23, 1, 1, "", "NCTaskILPiggybackTrainer"]], "begin.algorithms.piggyback.nodes.NCTaskILPiggybackTrainer": [[23, 2, 1, "", "afterInference"], [23, 2, 1, "", "beforeInference"], [23, 2, 1, "", "inference"], [23, 2, 1, "", "initTrainingStates"], [23, 2, 1, "", "processAfterEachIteration"], [23, 2, 1, "", "processAfterTraining"], [23, 2, 1, "", "processBeforeTraining"], [23, 2, 1, "", "processEvalIteration"]], "begin.algorithms.twp": [[24, 0, 0, "-", "graphs"], [24, 0, 0, "-", "links"], [24, 0, 0, "-", "nodes"]], "begin.algorithms.twp.graphs": [[24, 1, 1, "", "GCClassILTWPTrainer"], [24, 1, 1, "", "GCDomainILTWPTrainer"], [24, 1, 1, "", "GCTaskILTWPTrainer"], [24, 1, 1, "", "GCTimeILTWPTrainer"]], "begin.algorithms.twp.graphs.GCClassILTWPTrainer": [[24, 2, 1, "", "afterInference"], [24, 2, 1, "", "inference"], [24, 2, 1, "", "initTrainingStates"], [24, 2, 1, "", "processAfterTraining"]], "begin.algorithms.twp.graphs.GCTaskILTWPTrainer": [[24, 2, 1, "", "afterInference"], [24, 2, 1, "", "inference"], [24, 2, 1, "", "initTrainingStates"], [24, 2, 1, "", "processAfterTraining"]], "begin.algorithms.twp.links": [[24, 1, 1, "", "LCClassILTWPTrainer"], [24, 1, 1, "", "LCTaskILTWPTrainer"], [24, 1, 1, "", "LCTimeILTWPTrainer"], [24, 1, 1, "", "LPDomainILTWPTrainer"], [24, 1, 1, "", "LPTimeILTWPTrainer"]], "begin.algorithms.twp.links.LCClassILTWPTrainer": [[24, 2, 1, "", "afterInference"], [24, 2, 1, "", "inference"], [24, 2, 1, "", "initTrainingStates"], [24, 2, 1, "", "processAfterTraining"]], "begin.algorithms.twp.links.LCTaskILTWPTrainer": [[24, 2, 1, "", "afterInference"], [24, 2, 1, "", "inference"], [24, 2, 1, "", "initTrainingStates"], [24, 2, 1, "", "prepareLoader"], [24, 2, 1, "", "processAfterTraining"]], "begin.algorithms.twp.links.LCTimeILTWPTrainer": [[24, 2, 1, "", "afterInference"], [24, 2, 1, "", "inference"], [24, 2, 1, "", "initTrainingStates"], [24, 2, 1, "", "processAfterTraining"], [24, 2, 1, "", "processBeforeTraining"], [24, 2, 1, "", "processEvalIteration"]], "begin.algorithms.twp.links.LPTimeILTWPTrainer": [[24, 2, 1, "", "initTrainingStates"], [24, 2, 1, "", "processAfterTraining"], [24, 2, 1, "", "processTrainIteration"]], "begin.algorithms.twp.nodes": [[24, 1, 1, "", "NCClassILTWPMinibatchTrainer"], [24, 1, 1, "", "NCClassILTWPTrainer"], [24, 1, 1, "", "NCDomainILTWPTrainer"], [24, 1, 1, "", "NCTaskILTWPTrainer"], [24, 1, 1, "", "NCTimeILTWPTrainer"]], "begin.algorithms.twp.nodes.NCClassILTWPMinibatchTrainer": [[24, 2, 1, "", "afterInference"], [24, 2, 1, "", "inference"], [24, 2, 1, "", "initTrainingStates"], [24, 2, 1, "", "processAfterTraining"]], "begin.algorithms.twp.nodes.NCClassILTWPTrainer": [[24, 2, 1, "", "afterInference"], [24, 2, 1, "", "inference"], [24, 2, 1, "", "initTrainingStates"], [24, 2, 1, "", "processAfterTraining"]], "begin.algorithms.twp.nodes.NCTaskILTWPTrainer": [[24, 2, 1, "", "afterInference"], [24, 2, 1, "", "inference"], [24, 2, 1, "", "initTrainingStates"], [24, 2, 1, "", "processAfterTraining"]], "begin.evaluators": [[26, 1, 1, "", "AccuracyEvaluator"], [26, 1, 1, "", "BaseEvaluator"], [26, 1, 1, "", "HitsEvaluator"], [26, 1, 1, "", "ROCAUCEvaluator"]], "begin.evaluators.AccuracyEvaluator": [[26, 2, 1, "", "simple_eval"]], "begin.evaluators.BaseEvaluator": [[26, 2, 1, "", "simple_eval"]], "begin.evaluators.HitsEvaluator": [[26, 2, 1, "", "simple_eval"]], "begin.evaluators.ROCAUCEvaluator": [[26, 2, 1, "", "simple_eval"]], "begin.scenarios.common": [[6, 1, 1, "", "BaseScenarioLoader"]], "begin.scenarios.common.BaseScenarioLoader": [[6, 2, 1, "", "_init_continual_scenario"], [6, 2, 1, "", "_update_accumulated_dataset"], [6, 2, 1, "", "_update_target_dataset"], [6, 2, 1, "", "export_dataset"], [6, 2, 1, "", "get_accumulated_dataset"], [6, 2, 1, "", "get_current_dataset"], [6, 2, 1, "", "next_task"]], "begin.scenarios": [[7, 0, 0, "-", "graphs"], [8, 0, 0, "-", "links"], [9, 0, 0, "-", "nodes"]], "begin.scenarios.graphs": [[7, 1, 1, "", "GCScenarioLoader"]], "begin.scenarios.graphs.GCScenarioLoader": [[7, 2, 1, "", "_get_eval_result_inner"], [7, 2, 1, "", "_init_continual_scenario"], [7, 2, 1, "", "_update_accumulated_dataset"], [7, 2, 1, "", "_update_target_dataset"], [7, 2, 1, "", "get_accum_eval_result"], [7, 2, 1, "", "get_current_dataset_for_export"], [7, 2, 1, "", "get_simple_eval_result"], [7, 2, 1, "", "next_task"]], "begin.scenarios.links": [[8, 1, 1, "", "LCScenarioLoader"], [8, 1, 1, "", "LPScenarioLoader"]], "begin.scenarios.links.LCScenarioLoader": [[8, 2, 1, "", "_get_eval_result_inner"], [8, 2, 1, "", "_init_continual_scenario"], [8, 2, 1, "", "_update_accumulated_dataset"], [8, 2, 1, "", "_update_target_dataset"], [8, 2, 1, "", "get_accum_eval_result"], [8, 2, 1, "", "get_current_dataset_for_export"], [8, 2, 1, "", "get_simple_eval_result"], [8, 2, 1, "", "next_task"]], "begin.scenarios.links.LPScenarioLoader": [[8, 2, 1, "", "_get_eval_result_inner"], [8, 2, 1, "", "_init_continual_scenario"], [8, 2, 1, "", "_update_accumulated_dataset"], [8, 2, 1, "", "_update_target_dataset"], [8, 2, 1, "", "get_accum_eval_result"], [8, 2, 1, "", "get_current_dataset_for_export"], [8, 2, 1, "", "get_simple_eval_result"], [8, 2, 1, "", "next_task"]], "begin.scenarios.nodes": [[9, 1, 1, "", "NCScenarioLoader"], [9, 3, 1, "", "load_node_dataset"]], "begin.scenarios.nodes.NCScenarioLoader": [[9, 2, 1, "", "_get_eval_result_inner"], [9, 2, 1, "", "_init_continual_scenario"], [9, 2, 1, "", "_update_accumulated_dataset"], [9, 2, 1, "", "_update_target_dataset"], [9, 2, 1, "", "get_accum_eval_result"], [9, 2, 1, "", "get_current_dataset_for_export"], [9, 2, 1, "", "get_simple_eval_result"], [9, 2, 1, "", "next_task"]], "begin.trainers": [[10, 0, 0, "-", "common"], [11, 0, 0, "-", "graphs"], [12, 0, 0, "-", "links"], [13, 0, 0, "-", "nodes"]], "begin.trainers.common": [[10, 1, 1, "", "BaseTrainer"]], "begin.trainers.common.BaseTrainer": [[10, 2, 1, "", "_evalWrapper"], [10, 2, 1, "", "_reduceEvalStats"], [10, 2, 1, "", "_reduceTrainingStats"], [10, 2, 1, "", "_reset_model"], [10, 2, 1, "", "_reset_optimizer"], [10, 2, 1, "", "_trainWrapper"], [10, 2, 1, "", "afterInference"], [10, 2, 1, "", "beforeInference"], [10, 4, 1, "", "curr_task"], [10, 4, 1, "", "incr_type"], [10, 2, 1, "", "inference"], [10, 2, 1, "", "initTrainingStates"], [10, 2, 1, "", "predictionFormat"], [10, 2, 1, "", "prepareLoader"], [10, 2, 1, "", "processAfterEachIteration"], [10, 2, 1, "", "processAfterTraining"], [10, 2, 1, "", "processBeforeTraining"], [10, 2, 1, "", "processEvalIteration"], [10, 2, 1, "", "processTrainIteration"], [10, 2, 1, "", "processTrainingLogs"], [10, 2, 1, "", "run"]], "begin.trainers.graphs": [[11, 1, 1, "", "GCTrainer"]], "begin.trainers.graphs.GCTrainer": [[11, 2, 1, "", "afterInference"], [11, 2, 1, "", "beforeInference"], [11, 2, 1, "", "inference"], [11, 2, 1, "", "initTrainingStates"], [11, 2, 1, "", "predictionFormat"], [11, 2, 1, "", "prepareLoader"], [11, 2, 1, "", "processAfterEachIteration"], [11, 2, 1, "", "processAfterTraining"], [11, 2, 1, "", "processBeforeTraining"], [11, 2, 1, "", "processEvalIteration"], [11, 2, 1, "", "processTrainIteration"], [11, 2, 1, "", "processTrainingLogs"], [11, 2, 1, "", "run"]], "begin.trainers.links": [[12, 1, 1, "", "LCTrainer"], [12, 1, 1, "", "LPTrainer"]], "begin.trainers.links.LCTrainer": [[12, 2, 1, "", "afterInference"], [12, 2, 1, "", "beforeInference"], [12, 2, 1, "", "inference"], [12, 2, 1, "", "initTrainingStates"], [12, 2, 1, "", "predictionFormat"], [12, 2, 1, "", "prepareLoader"], [12, 2, 1, "", "processAfterEachIteration"], [12, 2, 1, "", "processAfterTraining"], [12, 2, 1, "", "processBeforeTraining"], [12, 2, 1, "", "processEvalIteration"], [12, 2, 1, "", "processTrainIteration"], [12, 2, 1, "", "processTrainingLogs"], [12, 2, 1, "", "run"]], "begin.trainers.links.LPTrainer": [[12, 2, 1, "", "afterInference"], [12, 2, 1, "", "beforeInference"], [12, 2, 1, "", "inference"], [12, 2, 1, "", "initTrainingStates"], [12, 2, 1, "", "predictionFormat"], [12, 2, 1, "", "prepareLoader"], [12, 2, 1, "", "processAfterEachIteration"], [12, 2, 1, "", "processAfterTraining"], [12, 2, 1, "", "processBeforeTraining"], [12, 2, 1, "", "processEvalIteration"], [12, 2, 1, "", "processTrainIteration"], [12, 2, 1, "", "processTrainingLogs"], [12, 2, 1, "", "run"]], "begin.trainers.nodes": [[13, 1, 1, "", "NCMinibatchTrainer"], [13, 1, 1, "", "NCTrainer"]], "begin.trainers.nodes.NCMinibatchTrainer": [[13, 2, 1, "", "afterInference"], [13, 2, 1, "", "inference"], [13, 2, 1, "", "prepareLoader"], [13, 2, 1, "", "processTrainingLogs"]], "begin.trainers.nodes.NCTrainer": [[13, 2, 1, "", "afterInference"], [13, 2, 1, "", "beforeInference"], [13, 2, 1, "", "inference"], [13, 2, 1, "", "initTrainingStates"], [13, 2, 1, "", "predictionFormat"], [13, 2, 1, "", "prepareLoader"], [13, 2, 1, "", "processAfterEachIteration"], [13, 2, 1, "", "processAfterTraining"], [13, 2, 1, "", "processBeforeTraining"], [13, 2, 1, "", "processEvalIteration"], [13, 2, 1, "", "processTrainIteration"], [13, 2, 1, "", "processTrainingLogs"], [13, 2, 1, "", "run"]], "begin.utils": [[27, 1, 1, "", "AdaptiveLinear"]], "begin.utils.AdaptiveLinear": [[27, 2, 1, "", "forward"], [27, 2, 1, "", "get_output_mask"], [27, 2, 1, "", "observe_outputs"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"]}, "titleterms": {"instal": 0, "setup": 0, "requir": 0, "load": 1, "custom": 1, "scenario": [1, 28], "creat": 1, "dataset": [1, 3, 4, 5, 28], "its": 1, "loader": 1, "exampl": 1, "cora": [1, 5], "tutori": [2, 28], "scenarioload": 2, "evalu": [2, 28], "metric": [2, 25, 26], "trainer": [2, 28], "step": 2, "1": 2, "extend": 2, "base": 2, "2": 2, "set": 2, "initi": 2, "state": 2, "algorithm": 2, "inittrainingst": 2, "3": 2, "store": 2, "previou": 2, "weight": 2, "fisher": 2, "matrix": 2, "processaftertrain": 2, "4": 2, "comput": 2, "penalti": 2, "term": 2, "perform": [2, 25, 26], "regular": 2, "processtrainiter": 2, "afterinfer": 2, "combin": 2, "graph": [3, 7, 11, 14, 17, 18, 20, 21, 24], "level": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "problem": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "mnist": 3, "cifar10": 3, "aromat": 3, "ogbg": 3, "molhiv": 3, "nyc": 3, "taxi": 3, "ppa": 3, "sentiment": 3, "link": [4, 8, 12, 14, 17, 18, 20, 21, 24], "bitcoin": 4, "otc": 4, "classif": [4, 9], "wiki": 4, "c": 4, "predict": 4, "ogbl": 4, "collab": 4, "facebook": 4, "askubuntu": 4, "node": [5, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "cites": 5, "coraful": 5, "ogbn": 5, "mag": 5, "product": 5, "protein": 5, "arxiv": 5, "twitch": 5, "common": [6, 10], "framework": [6, 10], "bare": 14, "model": 14, "continualgnn": 15, "er": 16, "gnn": 16, "ewc": 17, "gem": 18, "hat": 19, "lwf": 20, "ma": 21, "packnet": 22, "piggyback": 23, "twp": 24, "cl": 25, "averag": 25, "ap": 25, "forget": 25, "af": 25, "intransig": 25, "int": 25, "forward": 25, "transfer": 25, "fwt": 25, "basic": 26, "baseevalu": 26, "accuraci": 26, "rocauc": 26, "hit": 26, "k": 26, "adaptivelinear": 27, "welcom": 28, "begin": 28, "document": 28, "content": 28, "get": 28, "start": 28, "continu": 28, "learn": 28, "method": 28, "util": 28}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"Install and Setup": [[0, "install-and-setup"]], "Requirements": [[0, "requirements"]], "Installation": [[0, "installation"]], "Load Custom Scenarios": [[1, "load-custom-scenarios"]], "Create custom dataset and its loader": [[1, "create-custom-dataset-and-its-loader"]], "Example with Cora dataset": [[1, "example-with-cora-dataset"]], "Tutorial": [[2, "tutorial"]], "ScenarioLoader and Evaluation Metric": [[2, "scenarioloader-and-evaluation-metric"]], "Trainer": [[2, "trainer"], [28, null]], "Step 1. Extending the base": [[2, "step-1-extending-the-base"]], "Step 2. Setting initial states for the algorithm (initTrainingStates())": [[2, "step-2-setting-initial-states-for-the-algorithm-inittrainingstates"]], "Step 3. Storing previous weights and Fisher matrix (processAfterTraining())": [[2, "step-3-storing-previous-weights-and-fisher-matrix-processaftertraining"]], "Step 4. Computing penalty term and Performing regularization (processTrainIteration() and afterInference())": [[2, "step-4-computing-penalty-term-and-performing-regularization-processtrainiteration-and-afterinference"]], "Combining ScenarioLoader, Evaluator, Trainer": [[2, "combining-scenarioloader-evaluator-trainer"]], "Datasets for Graph-Level Problems": [[3, "datasets-for-graph-level-problems"]], "MNIST": [[3, "mnist"]], "CIFAR10": [[3, "cifar10"]], "Aromaticity": [[3, "aromaticity"]], "ogbg-molhiv": [[3, "ogbg-molhiv"]], "NYC-Taxi": [[3, "nyc-taxi"]], "ogbg-ppa": [[3, "ogbg-ppa"]], "sentiment": [[3, "sentiment"]], "Datasets for Link-Level Problems": [[4, "datasets-for-link-level-problems"]], "Bitcoin-OTC (Link Classification)": [[4, "bitcoin-otc-link-classification"]], "Wiki-CS (Link Prediction)": [[4, "wiki-cs-link-prediction"]], "ogbl-collab (Link Prediction)": [[4, "ogbl-collab-link-prediction"]], "facebook (Link Prediction)": [[4, "facebook-link-prediction"]], "askubuntu (Link Prediction)": [[4, "askubuntu-link-prediction"]], "Datasets for Node-Level Problems": [[5, "datasets-for-node-level-problems"]], "Cora": [[5, "cora"]], "Citeseer": [[5, "citeseer"]], "CoraFull": [[5, "corafull"]], "ogbn-mag": [[5, "ogbn-mag"]], "ogbn-products": [[5, "ogbn-products"]], "ogbn-proteins": [[5, "ogbn-proteins"]], "ogbn-arxiv": [[5, "ogbn-arxiv"]], "twitch": [[5, "twitch"]], "Common framework": [[6, "common-framework"], [10, "common-framework"]], "Graph-level problems": [[7, "module-begin.scenarios.graphs"], [11, "module-begin.trainers.graphs"]], "Link-level problems": [[8, "module-begin.scenarios.links"], [12, "module-begin.trainers.links"]], "Node-level problems": [[9, "node-level-problems"], [13, "module-begin.trainers.nodes"]], "Classification": [[9, "module-begin.scenarios.nodes"]], "Bare Model": [[14, "bare-model"]], "Node-level Problems": [[14, "module-begin.algorithms.bare.nodes"], [15, "module-begin.algorithms.cgnn.nodes"], [16, "module-begin.algorithms.ergnn.nodes"], [17, "module-begin.algorithms.ewc.nodes"], [18, "module-begin.algorithms.gem.nodes"], [19, "module-begin.algorithms.hat.nodes"], [20, "module-begin.algorithms.lwf.nodes"], [21, "module-begin.algorithms.mas.nodes"], [22, "module-begin.algorithms.packnet.nodes"], [23, "module-begin.algorithms.piggyback.nodes"], [24, "module-begin.algorithms.twp.nodes"]], "Link-level Problems": [[14, "module-begin.algorithms.bare.links"], [17, "module-begin.algorithms.ewc.links"], [18, "module-begin.algorithms.gem.links"], [20, "module-begin.algorithms.lwf.links"], [21, "module-begin.algorithms.mas.links"], [24, "module-begin.algorithms.twp.links"]], "Graph-level Problems": [[14, "module-begin.algorithms.bare.graphs"], [17, "module-begin.algorithms.ewc.graphs"], [18, "module-begin.algorithms.gem.graphs"], [20, "module-begin.algorithms.lwf.graphs"], [21, "module-begin.algorithms.mas.graphs"], [24, "module-begin.algorithms.twp.graphs"]], "ContinualGNN": [[15, "continualgnn"]], "ER-GNN": [[16, "er-gnn"]], "EWC": [[17, "ewc"]], "GEM": [[18, "gem"]], "HAT": [[19, "hat"]], "LwF": [[20, "lwf"]], "MAS": [[21, "mas"]], "PackNet": [[22, "packnet"]], "Piggyback": [[23, "piggyback"]], "TWP": [[24, "twp"]], "Metrics for CL": [[25, "metrics-for-cl"]], "Average Performance (AP)": [[25, "average-performance-ap"]], "Average Forgetting (AF)": [[25, "average-forgetting-af"]], "Intransigence (INT)": [[25, "intransigence-int"]], "Forward Transfer (FWT)": [[25, "forward-transfer-fwt"]], "Basic Performance Metrics": [[26, "basic-performance-metrics"]], "BaseEvaluator": [[26, "baseevaluator"]], "Accuracy": [[26, "accuracy"]], "ROCAUC": [[26, "rocauc"]], "HITS@K": [[26, "hits-k"]], "AdaptiveLinear": [[27, "adaptivelinear"]], "Welcome to BeGin Tutorials and Documentation!": [[28, "welcome-to-begin-tutorials-and-documentation"]], "Contents": [[28, "contents"]], "Get Started": [[28, null]], "Datasets": [[28, null]], "Scenarios": [[28, null]], "Continual Learning Methods": [[28, null]], "Evaluator": [[28, null]], "Utils": [[28, null]]}, "indexentries": {"basescenarioloader (class in begin.scenarios.common)": [[6, "begin.scenarios.common.BaseScenarioLoader"]], "_init_continual_scenario() (basescenarioloader method)": [[6, "begin.scenarios.common.BaseScenarioLoader._init_continual_scenario"]], "_update_accumulated_dataset() (basescenarioloader method)": [[6, "begin.scenarios.common.BaseScenarioLoader._update_accumulated_dataset"]], "_update_target_dataset() (basescenarioloader method)": [[6, "begin.scenarios.common.BaseScenarioLoader._update_target_dataset"]], "export_dataset() (basescenarioloader method)": [[6, "begin.scenarios.common.BaseScenarioLoader.export_dataset"]], "get_accumulated_dataset() (basescenarioloader method)": [[6, "begin.scenarios.common.BaseScenarioLoader.get_accumulated_dataset"]], "get_current_dataset() (basescenarioloader method)": [[6, "begin.scenarios.common.BaseScenarioLoader.get_current_dataset"]], "next_task() (basescenarioloader method)": [[6, "begin.scenarios.common.BaseScenarioLoader.next_task"]], "gcscenarioloader (class in begin.scenarios.graphs)": [[7, "begin.scenarios.graphs.GCScenarioLoader"]], "_get_eval_result_inner() (gcscenarioloader method)": [[7, "begin.scenarios.graphs.GCScenarioLoader._get_eval_result_inner"]], "_init_continual_scenario() (gcscenarioloader method)": [[7, "begin.scenarios.graphs.GCScenarioLoader._init_continual_scenario"]], "_update_accumulated_dataset() (gcscenarioloader method)": [[7, "begin.scenarios.graphs.GCScenarioLoader._update_accumulated_dataset"]], "_update_target_dataset() (gcscenarioloader method)": [[7, "begin.scenarios.graphs.GCScenarioLoader._update_target_dataset"]], "begin.scenarios.graphs": [[7, "module-begin.scenarios.graphs"]], "get_accum_eval_result() (gcscenarioloader method)": [[7, "begin.scenarios.graphs.GCScenarioLoader.get_accum_eval_result"]], "get_current_dataset_for_export() (gcscenarioloader method)": [[7, "begin.scenarios.graphs.GCScenarioLoader.get_current_dataset_for_export"]], "get_simple_eval_result() (gcscenarioloader method)": [[7, "begin.scenarios.graphs.GCScenarioLoader.get_simple_eval_result"]], "module": [[7, "module-begin.scenarios.graphs"], [8, "module-begin.scenarios.links"], [9, "module-begin.scenarios.nodes"], [10, "module-begin.trainers.common"], [11, "module-begin.trainers.graphs"], [12, "module-begin.trainers.links"], [13, "module-begin.trainers.nodes"], [14, "module-begin.algorithms.bare.graphs"], [14, "module-begin.algorithms.bare.links"], [14, "module-begin.algorithms.bare.nodes"], [15, "module-begin.algorithms.cgnn.nodes"], [16, "module-begin.algorithms.ergnn.nodes"], [17, "module-begin.algorithms.ewc.graphs"], [17, "module-begin.algorithms.ewc.links"], [17, "module-begin.algorithms.ewc.nodes"], [18, "module-begin.algorithms.gem.graphs"], [18, "module-begin.algorithms.gem.links"], [18, "module-begin.algorithms.gem.nodes"], [19, "module-begin.algorithms.hat.nodes"], [20, "module-begin.algorithms.lwf.graphs"], [20, "module-begin.algorithms.lwf.links"], [20, "module-begin.algorithms.lwf.nodes"], [21, "module-begin.algorithms.mas.graphs"], [21, "module-begin.algorithms.mas.links"], [21, "module-begin.algorithms.mas.nodes"], [22, "module-begin.algorithms.packnet.nodes"], [23, "module-begin.algorithms.piggyback.nodes"], [24, "module-begin.algorithms.twp.graphs"], [24, "module-begin.algorithms.twp.links"], [24, "module-begin.algorithms.twp.nodes"]], "next_task() (gcscenarioloader method)": [[7, "begin.scenarios.graphs.GCScenarioLoader.next_task"]], "lcscenarioloader (class in begin.scenarios.links)": [[8, "begin.scenarios.links.LCScenarioLoader"]], "lpscenarioloader (class in begin.scenarios.links)": [[8, "begin.scenarios.links.LPScenarioLoader"]], "_get_eval_result_inner() (lcscenarioloader method)": [[8, "begin.scenarios.links.LCScenarioLoader._get_eval_result_inner"]], "_get_eval_result_inner() (lpscenarioloader method)": [[8, "begin.scenarios.links.LPScenarioLoader._get_eval_result_inner"]], "_init_continual_scenario() (lcscenarioloader method)": [[8, "begin.scenarios.links.LCScenarioLoader._init_continual_scenario"]], "_init_continual_scenario() (lpscenarioloader method)": [[8, "begin.scenarios.links.LPScenarioLoader._init_continual_scenario"]], "_update_accumulated_dataset() (lcscenarioloader method)": [[8, "begin.scenarios.links.LCScenarioLoader._update_accumulated_dataset"]], "_update_accumulated_dataset() (lpscenarioloader method)": [[8, "begin.scenarios.links.LPScenarioLoader._update_accumulated_dataset"]], "_update_target_dataset() (lcscenarioloader method)": [[8, "begin.scenarios.links.LCScenarioLoader._update_target_dataset"]], "_update_target_dataset() (lpscenarioloader method)": [[8, "begin.scenarios.links.LPScenarioLoader._update_target_dataset"]], "begin.scenarios.links": [[8, "module-begin.scenarios.links"]], "get_accum_eval_result() (lcscenarioloader method)": [[8, "begin.scenarios.links.LCScenarioLoader.get_accum_eval_result"]], "get_accum_eval_result() (lpscenarioloader method)": [[8, "begin.scenarios.links.LPScenarioLoader.get_accum_eval_result"]], "get_current_dataset_for_export() (lcscenarioloader method)": [[8, "begin.scenarios.links.LCScenarioLoader.get_current_dataset_for_export"]], "get_current_dataset_for_export() (lpscenarioloader method)": [[8, "begin.scenarios.links.LPScenarioLoader.get_current_dataset_for_export"]], "get_simple_eval_result() (lcscenarioloader method)": [[8, "begin.scenarios.links.LCScenarioLoader.get_simple_eval_result"]], "get_simple_eval_result() (lpscenarioloader method)": [[8, "begin.scenarios.links.LPScenarioLoader.get_simple_eval_result"]], "next_task() (lcscenarioloader method)": [[8, "begin.scenarios.links.LCScenarioLoader.next_task"]], "next_task() (lpscenarioloader method)": [[8, "begin.scenarios.links.LPScenarioLoader.next_task"]], "ncscenarioloader (class in begin.scenarios.nodes)": [[9, "begin.scenarios.nodes.NCScenarioLoader"]], "_get_eval_result_inner() (ncscenarioloader method)": [[9, "begin.scenarios.nodes.NCScenarioLoader._get_eval_result_inner"]], "_init_continual_scenario() (ncscenarioloader method)": [[9, "begin.scenarios.nodes.NCScenarioLoader._init_continual_scenario"]], "_update_accumulated_dataset() (ncscenarioloader method)": [[9, "begin.scenarios.nodes.NCScenarioLoader._update_accumulated_dataset"]], "_update_target_dataset() (ncscenarioloader method)": [[9, "begin.scenarios.nodes.NCScenarioLoader._update_target_dataset"]], "begin.scenarios.nodes": [[9, "module-begin.scenarios.nodes"]], "get_accum_eval_result() (ncscenarioloader method)": [[9, "begin.scenarios.nodes.NCScenarioLoader.get_accum_eval_result"]], "get_current_dataset_for_export() (ncscenarioloader method)": [[9, "begin.scenarios.nodes.NCScenarioLoader.get_current_dataset_for_export"]], "get_simple_eval_result() (ncscenarioloader method)": [[9, "begin.scenarios.nodes.NCScenarioLoader.get_simple_eval_result"]], "load_node_dataset() (in module begin.scenarios.nodes)": [[9, "begin.scenarios.nodes.load_node_dataset"]], "next_task() (ncscenarioloader method)": [[9, "begin.scenarios.nodes.NCScenarioLoader.next_task"]], "basetrainer (class in begin.trainers.common)": [[10, "begin.trainers.common.BaseTrainer"]], "_evalwrapper() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer._evalWrapper"]], "_reduceevalstats() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer._reduceEvalStats"]], "_reducetrainingstats() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer._reduceTrainingStats"]], "_reset_model() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer._reset_model"]], "_reset_optimizer() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer._reset_optimizer"]], "_trainwrapper() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer._trainWrapper"]], "afterinference() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer.afterInference"]], "beforeinference() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer.beforeInference"]], "begin.trainers.common": [[10, "module-begin.trainers.common"]], "curr_task (basetrainer property)": [[10, "begin.trainers.common.BaseTrainer.curr_task"]], "incr_type (basetrainer property)": [[10, "begin.trainers.common.BaseTrainer.incr_type"]], "inference() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer.inference"]], "inittrainingstates() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer.initTrainingStates"]], "predictionformat() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer.predictionFormat"]], "prepareloader() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer.prepareLoader"]], "processaftereachiteration() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer.processAfterEachIteration"]], "processaftertraining() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer.processAfterTraining"]], "processbeforetraining() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer.processBeforeTraining"]], "processevaliteration() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer.processEvalIteration"]], "processtrainiteration() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer.processTrainIteration"]], "processtraininglogs() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer.processTrainingLogs"]], "run() (basetrainer method)": [[10, "begin.trainers.common.BaseTrainer.run"]], "gctrainer (class in begin.trainers.graphs)": [[11, "begin.trainers.graphs.GCTrainer"]], "afterinference() (gctrainer method)": [[11, "begin.trainers.graphs.GCTrainer.afterInference"]], "beforeinference() (gctrainer method)": [[11, "begin.trainers.graphs.GCTrainer.beforeInference"]], "begin.trainers.graphs": [[11, "module-begin.trainers.graphs"]], "inference() (gctrainer method)": [[11, "begin.trainers.graphs.GCTrainer.inference"]], "inittrainingstates() (gctrainer method)": [[11, "begin.trainers.graphs.GCTrainer.initTrainingStates"]], "predictionformat() (gctrainer method)": [[11, "begin.trainers.graphs.GCTrainer.predictionFormat"]], "prepareloader() (gctrainer method)": [[11, "begin.trainers.graphs.GCTrainer.prepareLoader"]], "processaftereachiteration() (gctrainer method)": [[11, "begin.trainers.graphs.GCTrainer.processAfterEachIteration"]], "processaftertraining() (gctrainer method)": [[11, "begin.trainers.graphs.GCTrainer.processAfterTraining"]], "processbeforetraining() (gctrainer method)": [[11, "begin.trainers.graphs.GCTrainer.processBeforeTraining"]], "processevaliteration() (gctrainer method)": [[11, "begin.trainers.graphs.GCTrainer.processEvalIteration"]], "processtrainiteration() (gctrainer method)": [[11, "begin.trainers.graphs.GCTrainer.processTrainIteration"]], "processtraininglogs() (gctrainer method)": [[11, "begin.trainers.graphs.GCTrainer.processTrainingLogs"]], "run() (gctrainer method)": [[11, "begin.trainers.graphs.GCTrainer.run"]], "lctrainer (class in begin.trainers.links)": [[12, "begin.trainers.links.LCTrainer"]], "lptrainer (class in begin.trainers.links)": [[12, "begin.trainers.links.LPTrainer"]], "afterinference() (lctrainer method)": [[12, "begin.trainers.links.LCTrainer.afterInference"]], "afterinference() (lptrainer method)": [[12, "begin.trainers.links.LPTrainer.afterInference"]], "beforeinference() (lctrainer method)": [[12, "begin.trainers.links.LCTrainer.beforeInference"]], "beforeinference() (lptrainer method)": [[12, "begin.trainers.links.LPTrainer.beforeInference"]], "begin.trainers.links": [[12, "module-begin.trainers.links"]], "inference() (lctrainer method)": [[12, "begin.trainers.links.LCTrainer.inference"]], "inference() (lptrainer method)": [[12, "begin.trainers.links.LPTrainer.inference"]], "inittrainingstates() (lctrainer method)": [[12, "begin.trainers.links.LCTrainer.initTrainingStates"]], "inittrainingstates() (lptrainer method)": [[12, "begin.trainers.links.LPTrainer.initTrainingStates"]], "predictionformat() (lctrainer method)": [[12, "begin.trainers.links.LCTrainer.predictionFormat"]], "predictionformat() (lptrainer method)": [[12, "begin.trainers.links.LPTrainer.predictionFormat"]], "prepareloader() (lctrainer method)": [[12, "begin.trainers.links.LCTrainer.prepareLoader"]], "prepareloader() (lptrainer method)": [[12, "begin.trainers.links.LPTrainer.prepareLoader"]], "processaftereachiteration() (lctrainer method)": [[12, "begin.trainers.links.LCTrainer.processAfterEachIteration"]], "processaftereachiteration() (lptrainer method)": [[12, "begin.trainers.links.LPTrainer.processAfterEachIteration"]], "processaftertraining() (lctrainer method)": [[12, "begin.trainers.links.LCTrainer.processAfterTraining"]], "processaftertraining() (lptrainer method)": [[12, "begin.trainers.links.LPTrainer.processAfterTraining"]], "processbeforetraining() (lctrainer method)": [[12, "begin.trainers.links.LCTrainer.processBeforeTraining"]], "processbeforetraining() (lptrainer method)": [[12, "begin.trainers.links.LPTrainer.processBeforeTraining"]], "processevaliteration() (lctrainer method)": [[12, "begin.trainers.links.LCTrainer.processEvalIteration"]], "processevaliteration() (lptrainer method)": [[12, "begin.trainers.links.LPTrainer.processEvalIteration"]], "processtrainiteration() (lctrainer method)": [[12, "begin.trainers.links.LCTrainer.processTrainIteration"]], "processtrainiteration() (lptrainer method)": [[12, "begin.trainers.links.LPTrainer.processTrainIteration"]], "processtraininglogs() (lctrainer method)": [[12, "begin.trainers.links.LCTrainer.processTrainingLogs"]], "processtraininglogs() (lptrainer method)": [[12, "begin.trainers.links.LPTrainer.processTrainingLogs"]], "run() (lctrainer method)": [[12, "begin.trainers.links.LCTrainer.run"]], "run() (lptrainer method)": [[12, "begin.trainers.links.LPTrainer.run"]], "ncminibatchtrainer (class in begin.trainers.nodes)": [[13, "begin.trainers.nodes.NCMinibatchTrainer"]], "nctrainer (class in begin.trainers.nodes)": [[13, "begin.trainers.nodes.NCTrainer"]], "afterinference() (ncminibatchtrainer method)": [[13, "begin.trainers.nodes.NCMinibatchTrainer.afterInference"]], "afterinference() (nctrainer method)": [[13, "begin.trainers.nodes.NCTrainer.afterInference"]], "beforeinference() (nctrainer method)": [[13, "begin.trainers.nodes.NCTrainer.beforeInference"]], "begin.trainers.nodes": [[13, "module-begin.trainers.nodes"]], "inference() (ncminibatchtrainer method)": [[13, "begin.trainers.nodes.NCMinibatchTrainer.inference"]], "inference() (nctrainer method)": [[13, "begin.trainers.nodes.NCTrainer.inference"]], "inittrainingstates() (nctrainer method)": [[13, "begin.trainers.nodes.NCTrainer.initTrainingStates"]], "predictionformat() (nctrainer method)": [[13, "begin.trainers.nodes.NCTrainer.predictionFormat"]], "prepareloader() (ncminibatchtrainer method)": [[13, "begin.trainers.nodes.NCMinibatchTrainer.prepareLoader"]], "prepareloader() (nctrainer method)": [[13, "begin.trainers.nodes.NCTrainer.prepareLoader"]], "processaftereachiteration() (nctrainer method)": [[13, "begin.trainers.nodes.NCTrainer.processAfterEachIteration"]], "processaftertraining() (nctrainer method)": [[13, "begin.trainers.nodes.NCTrainer.processAfterTraining"]], "processbeforetraining() (nctrainer method)": [[13, "begin.trainers.nodes.NCTrainer.processBeforeTraining"]], "processevaliteration() (nctrainer method)": [[13, "begin.trainers.nodes.NCTrainer.processEvalIteration"]], "processtrainiteration() (nctrainer method)": [[13, "begin.trainers.nodes.NCTrainer.processTrainIteration"]], "processtraininglogs() (ncminibatchtrainer method)": [[13, "begin.trainers.nodes.NCMinibatchTrainer.processTrainingLogs"]], "processtraininglogs() (nctrainer method)": [[13, "begin.trainers.nodes.NCTrainer.processTrainingLogs"]], "run() (nctrainer method)": [[13, "begin.trainers.nodes.NCTrainer.run"]], "gcclassilbaretrainer (class in begin.algorithms.bare.graphs)": [[14, "begin.algorithms.bare.graphs.GCClassILBareTrainer"]], "gcdomainilbaretrainer (class in begin.algorithms.bare.graphs)": [[14, "begin.algorithms.bare.graphs.GCDomainILBareTrainer"]], "gctaskilbaretrainer (class in begin.algorithms.bare.graphs)": [[14, "begin.algorithms.bare.graphs.GCTaskILBareTrainer"]], "gctimeilbaretrainer (class in begin.algorithms.bare.graphs)": [[14, "begin.algorithms.bare.graphs.GCTimeILBareTrainer"]], "lcclassilbaretrainer (class in begin.algorithms.bare.links)": [[14, "begin.algorithms.bare.links.LCClassILBareTrainer"]], "lctaskilbaretrainer (class in begin.algorithms.bare.links)": [[14, "begin.algorithms.bare.links.LCTaskILBareTrainer"]], "lctimeilbaretrainer (class in begin.algorithms.bare.links)": [[14, "begin.algorithms.bare.links.LCTimeILBareTrainer"]], "lpdomainilbaretrainer (class in begin.algorithms.bare.links)": [[14, "begin.algorithms.bare.links.LPDomainILBareTrainer"]], "lptimeilbaretrainer (class in begin.algorithms.bare.links)": [[14, "begin.algorithms.bare.links.LPTimeILBareTrainer"]], "ncclassilbareminibatchtrainer (class in begin.algorithms.bare.nodes)": [[14, "begin.algorithms.bare.nodes.NCClassILBareMinibatchTrainer"]], "ncclassilbaretrainer (class in begin.algorithms.bare.nodes)": [[14, "begin.algorithms.bare.nodes.NCClassILBareTrainer"]], "ncdomainilbaretrainer (class in begin.algorithms.bare.nodes)": [[14, "begin.algorithms.bare.nodes.NCDomainILBareTrainer"]], "nctaskilbaretrainer (class in begin.algorithms.bare.nodes)": [[14, "begin.algorithms.bare.nodes.NCTaskILBareTrainer"]], "nctimeilbaretrainer (class in begin.algorithms.bare.nodes)": [[14, "begin.algorithms.bare.nodes.NCTimeILBareTrainer"]], "begin.algorithms.bare.graphs": [[14, "module-begin.algorithms.bare.graphs"]], "begin.algorithms.bare.links": [[14, "module-begin.algorithms.bare.links"]], "begin.algorithms.bare.nodes": [[14, "module-begin.algorithms.bare.nodes"]], "inference() (gctaskilbaretrainer method)": [[14, "begin.algorithms.bare.graphs.GCTaskILBareTrainer.inference"]], "inference() (lctaskilbaretrainer method)": [[14, "begin.algorithms.bare.links.LCTaskILBareTrainer.inference"]], "inference() (nctaskilbaretrainer method)": [[14, "begin.algorithms.bare.nodes.NCTaskILBareTrainer.inference"]], "prepareloader() (lctaskilbaretrainer method)": [[14, "begin.algorithms.bare.links.LCTaskILBareTrainer.prepareLoader"]], "ncclassilcgnntrainer (class in begin.algorithms.cgnn.nodes)": [[15, "begin.algorithms.cgnn.nodes.NCClassILCGNNTrainer"]], "ncdomainilcgnntrainer (class in begin.algorithms.cgnn.nodes)": [[15, "begin.algorithms.cgnn.nodes.NCDomainILCGNNTrainer"]], "nctaskilcgnntrainer (class in begin.algorithms.cgnn.nodes)": [[15, "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer"]], "nctimeilcgnntrainer (class in begin.algorithms.cgnn.nodes)": [[15, "begin.algorithms.cgnn.nodes.NCTimeILCGNNTrainer"]], "begin.algorithms.cgnn.nodes": [[15, "module-begin.algorithms.cgnn.nodes"]], "inittrainingstates() (ncclassilcgnntrainer method)": [[15, "begin.algorithms.cgnn.nodes.NCClassILCGNNTrainer.initTrainingStates"]], "inittrainingstates() (nctaskilcgnntrainer method)": [[15, "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer.initTrainingStates"]], "prepareloader() (ncclassilcgnntrainer method)": [[15, "begin.algorithms.cgnn.nodes.NCClassILCGNNTrainer.prepareLoader"]], "prepareloader() (nctaskilcgnntrainer method)": [[15, "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer.prepareLoader"]], "processaftereachiteration() (ncclassilcgnntrainer method)": [[15, "begin.algorithms.cgnn.nodes.NCClassILCGNNTrainer.processAfterEachIteration"]], "processaftereachiteration() (nctaskilcgnntrainer method)": [[15, "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer.processAfterEachIteration"]], "processaftertraining() (ncclassilcgnntrainer method)": [[15, "begin.algorithms.cgnn.nodes.NCClassILCGNNTrainer.processAfterTraining"]], "processaftertraining() (nctaskilcgnntrainer method)": [[15, "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer.processAfterTraining"]], "processbeforetraining() (ncclassilcgnntrainer method)": [[15, "begin.algorithms.cgnn.nodes.NCClassILCGNNTrainer.processBeforeTraining"]], "processbeforetraining() (nctaskilcgnntrainer method)": [[15, "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer.processBeforeTraining"]], "processevaliteration() (nctaskilcgnntrainer method)": [[15, "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer.processEvalIteration"]], "processtrainiteration() (ncclassilcgnntrainer method)": [[15, "begin.algorithms.cgnn.nodes.NCClassILCGNNTrainer.processTrainIteration"]], "processtrainiteration() (nctaskilcgnntrainer method)": [[15, "begin.algorithms.cgnn.nodes.NCTaskILCGNNTrainer.processTrainIteration"]], "ncclassilergnnminibatchtrainer (class in begin.algorithms.ergnn.nodes)": [[16, "begin.algorithms.ergnn.nodes.NCClassILERGNNMinibatchTrainer"]], "ncclassilergnntrainer (class in begin.algorithms.ergnn.nodes)": [[16, "begin.algorithms.ergnn.nodes.NCClassILERGNNTrainer"]], "ncdomainilergnntrainer (class in begin.algorithms.ergnn.nodes)": [[16, "begin.algorithms.ergnn.nodes.NCDomainILERGNNTrainer"]], "nctaskilergnntrainer (class in begin.algorithms.ergnn.nodes)": [[16, "begin.algorithms.ergnn.nodes.NCTaskILERGNNTrainer"]], "nctimeilergnntrainer (class in begin.algorithms.ergnn.nodes)": [[16, "begin.algorithms.ergnn.nodes.NCTimeILERGNNTrainer"]], "afterinference() (ncclassilergnnminibatchtrainer method)": [[16, "begin.algorithms.ergnn.nodes.NCClassILERGNNMinibatchTrainer.afterInference"]], "afterinference() (ncclassilergnntrainer method)": [[16, "begin.algorithms.ergnn.nodes.NCClassILERGNNTrainer.afterInference"]], "afterinference() (nctaskilergnntrainer method)": [[16, "begin.algorithms.ergnn.nodes.NCTaskILERGNNTrainer.afterInference"]], "begin.algorithms.ergnn.nodes": [[16, "module-begin.algorithms.ergnn.nodes"]], "inference() (ncclassilergnnminibatchtrainer method)": [[16, "begin.algorithms.ergnn.nodes.NCClassILERGNNMinibatchTrainer.inference"]], "inference() (ncclassilergnntrainer method)": [[16, "begin.algorithms.ergnn.nodes.NCClassILERGNNTrainer.inference"]], "inference() (nctaskilergnntrainer method)": [[16, "begin.algorithms.ergnn.nodes.NCTaskILERGNNTrainer.inference"]], "inittrainingstates() (ncclassilergnnminibatchtrainer method)": [[16, "begin.algorithms.ergnn.nodes.NCClassILERGNNMinibatchTrainer.initTrainingStates"]], "inittrainingstates() (ncclassilergnntrainer method)": [[16, "begin.algorithms.ergnn.nodes.NCClassILERGNNTrainer.initTrainingStates"]], "inittrainingstates() (nctaskilergnntrainer method)": [[16, "begin.algorithms.ergnn.nodes.NCTaskILERGNNTrainer.initTrainingStates"]], "inittrainingstates() (nctimeilergnntrainer method)": [[16, "begin.algorithms.ergnn.nodes.NCTimeILERGNNTrainer.initTrainingStates"]], "processaftertraining() (ncclassilergnnminibatchtrainer method)": [[16, "begin.algorithms.ergnn.nodes.NCClassILERGNNMinibatchTrainer.processAfterTraining"]], "processaftertraining() (ncclassilergnntrainer method)": [[16, "begin.algorithms.ergnn.nodes.NCClassILERGNNTrainer.processAfterTraining"]], "processaftertraining() (nctaskilergnntrainer method)": [[16, "begin.algorithms.ergnn.nodes.NCTaskILERGNNTrainer.processAfterTraining"]], "processaftertraining() (nctimeilergnntrainer method)": [[16, "begin.algorithms.ergnn.nodes.NCTimeILERGNNTrainer.processAfterTraining"]], "processbeforetraining() (ncclassilergnnminibatchtrainer method)": [[16, "begin.algorithms.ergnn.nodes.NCClassILERGNNMinibatchTrainer.processBeforeTraining"]], "processtrainiteration() (nctimeilergnntrainer method)": [[16, "begin.algorithms.ergnn.nodes.NCTimeILERGNNTrainer.processTrainIteration"]], "gcclassilewctrainer (class in begin.algorithms.ewc.graphs)": [[17, "begin.algorithms.ewc.graphs.GCClassILEWCTrainer"]], "gcdomainilewctrainer (class in begin.algorithms.ewc.graphs)": [[17, "begin.algorithms.ewc.graphs.GCDomainILEWCTrainer"]], "gctaskilewctrainer (class in begin.algorithms.ewc.graphs)": [[17, "begin.algorithms.ewc.graphs.GCTaskILEWCTrainer"]], "gctimeilewctrainer (class in begin.algorithms.ewc.graphs)": [[17, "begin.algorithms.ewc.graphs.GCTimeILEWCTrainer"]], "lcclassilewctrainer (class in begin.algorithms.ewc.links)": [[17, "begin.algorithms.ewc.links.LCClassILEWCTrainer"]], "lctaskilewctrainer (class in begin.algorithms.ewc.links)": [[17, "begin.algorithms.ewc.links.LCTaskILEWCTrainer"]], "lctimeilewctrainer (class in begin.algorithms.ewc.links)": [[17, "begin.algorithms.ewc.links.LCTimeILEWCTrainer"]], "lpdomainilewctrainer (class in begin.algorithms.ewc.links)": [[17, "begin.algorithms.ewc.links.LPDomainILEWCTrainer"]], "lptimeilewctrainer (class in begin.algorithms.ewc.links)": [[17, "begin.algorithms.ewc.links.LPTimeILEWCTrainer"]], "ncclassilewcminibatchtrainer (class in begin.algorithms.ewc.nodes)": [[17, "begin.algorithms.ewc.nodes.NCClassILEWCMinibatchTrainer"]], "ncclassilewctrainer (class in begin.algorithms.ewc.nodes)": [[17, "begin.algorithms.ewc.nodes.NCClassILEWCTrainer"]], "ncdomainilewctrainer (class in begin.algorithms.ewc.nodes)": [[17, "begin.algorithms.ewc.nodes.NCDomainILEWCTrainer"]], "nctaskilewctrainer (class in begin.algorithms.ewc.nodes)": [[17, "begin.algorithms.ewc.nodes.NCTaskILEWCTrainer"]], "nctimeilewctrainer (class in begin.algorithms.ewc.nodes)": [[17, "begin.algorithms.ewc.nodes.NCTimeILEWCTrainer"]], "afterinference() (gcclassilewctrainer method)": [[17, "begin.algorithms.ewc.graphs.GCClassILEWCTrainer.afterInference"]], "afterinference() (gctaskilewctrainer method)": [[17, "begin.algorithms.ewc.graphs.GCTaskILEWCTrainer.afterInference"]], "afterinference() (lcclassilewctrainer method)": [[17, "begin.algorithms.ewc.links.LCClassILEWCTrainer.afterInference"]], "afterinference() (lctaskilewctrainer method)": [[17, "begin.algorithms.ewc.links.LCTaskILEWCTrainer.afterInference"]], "afterinference() (lctimeilewctrainer method)": [[17, "begin.algorithms.ewc.links.LCTimeILEWCTrainer.afterInference"]], "afterinference() (ncclassilewcminibatchtrainer method)": [[17, "begin.algorithms.ewc.nodes.NCClassILEWCMinibatchTrainer.afterInference"]], "afterinference() (ncclassilewctrainer method)": [[17, "begin.algorithms.ewc.nodes.NCClassILEWCTrainer.afterInference"]], "afterinference() (nctaskilewctrainer method)": [[17, "begin.algorithms.ewc.nodes.NCTaskILEWCTrainer.afterInference"]], "begin.algorithms.ewc.graphs": [[17, "module-begin.algorithms.ewc.graphs"]], "begin.algorithms.ewc.links": [[17, "module-begin.algorithms.ewc.links"]], "begin.algorithms.ewc.nodes": [[17, "module-begin.algorithms.ewc.nodes"]], "inference() (gctaskilewctrainer method)": [[17, "begin.algorithms.ewc.graphs.GCTaskILEWCTrainer.inference"]], "inference() (lctaskilewctrainer method)": [[17, "begin.algorithms.ewc.links.LCTaskILEWCTrainer.inference"]], "inference() (nctaskilewctrainer method)": [[17, "begin.algorithms.ewc.nodes.NCTaskILEWCTrainer.inference"]], "inittrainingstates() (gcclassilewctrainer method)": [[17, "begin.algorithms.ewc.graphs.GCClassILEWCTrainer.initTrainingStates"]], "inittrainingstates() (gctaskilewctrainer method)": [[17, "begin.algorithms.ewc.graphs.GCTaskILEWCTrainer.initTrainingStates"]], "inittrainingstates() (lcclassilewctrainer method)": [[17, "begin.algorithms.ewc.links.LCClassILEWCTrainer.initTrainingStates"]], "inittrainingstates() (lctaskilewctrainer method)": [[17, "begin.algorithms.ewc.links.LCTaskILEWCTrainer.initTrainingStates"]], "inittrainingstates() (lctimeilewctrainer method)": [[17, "begin.algorithms.ewc.links.LCTimeILEWCTrainer.initTrainingStates"]], "inittrainingstates() (lptimeilewctrainer method)": [[17, "begin.algorithms.ewc.links.LPTimeILEWCTrainer.initTrainingStates"]], "inittrainingstates() (ncclassilewcminibatchtrainer method)": [[17, "begin.algorithms.ewc.nodes.NCClassILEWCMinibatchTrainer.initTrainingStates"]], "inittrainingstates() (ncclassilewctrainer method)": [[17, "begin.algorithms.ewc.nodes.NCClassILEWCTrainer.initTrainingStates"]], "inittrainingstates() (nctaskilewctrainer method)": [[17, "begin.algorithms.ewc.nodes.NCTaskILEWCTrainer.initTrainingStates"]], "prepareloader() (lctaskilewctrainer method)": [[17, "begin.algorithms.ewc.links.LCTaskILEWCTrainer.prepareLoader"]], "processaftertraining() (gcclassilewctrainer method)": [[17, "begin.algorithms.ewc.graphs.GCClassILEWCTrainer.processAfterTraining"]], "processaftertraining() (gctaskilewctrainer method)": [[17, "begin.algorithms.ewc.graphs.GCTaskILEWCTrainer.processAfterTraining"]], "processaftertraining() (lcclassilewctrainer method)": [[17, "begin.algorithms.ewc.links.LCClassILEWCTrainer.processAfterTraining"]], "processaftertraining() (lctaskilewctrainer method)": [[17, "begin.algorithms.ewc.links.LCTaskILEWCTrainer.processAfterTraining"]], "processaftertraining() (lctimeilewctrainer method)": [[17, "begin.algorithms.ewc.links.LCTimeILEWCTrainer.processAfterTraining"]], "processaftertraining() (lptimeilewctrainer method)": [[17, "begin.algorithms.ewc.links.LPTimeILEWCTrainer.processAfterTraining"]], "processaftertraining() (ncclassilewcminibatchtrainer method)": [[17, "begin.algorithms.ewc.nodes.NCClassILEWCMinibatchTrainer.processAfterTraining"]], "processaftertraining() (ncclassilewctrainer method)": [[17, "begin.algorithms.ewc.nodes.NCClassILEWCTrainer.processAfterTraining"]], "processaftertraining() (nctaskilewctrainer method)": [[17, "begin.algorithms.ewc.nodes.NCTaskILEWCTrainer.processAfterTraining"]], "processbeforetraining() (lctimeilewctrainer method)": [[17, "begin.algorithms.ewc.links.LCTimeILEWCTrainer.processBeforeTraining"]], "processevaliteration() (lctimeilewctrainer method)": [[17, "begin.algorithms.ewc.links.LCTimeILEWCTrainer.processEvalIteration"]], "processtrainiteration() (lptimeilewctrainer method)": [[17, "begin.algorithms.ewc.links.LPTimeILEWCTrainer.processTrainIteration"]], "gcclassilgemtrainer (class in begin.algorithms.gem.graphs)": [[18, "begin.algorithms.gem.graphs.GCClassILGEMTrainer"]], "gcdomainilgemtrainer (class in begin.algorithms.gem.graphs)": [[18, "begin.algorithms.gem.graphs.GCDomainILGEMTrainer"]], "gctaskilgemtrainer (class in begin.algorithms.gem.graphs)": [[18, "begin.algorithms.gem.graphs.GCTaskILGEMTrainer"]], "gctimeilgemtrainer (class in begin.algorithms.gem.graphs)": [[18, "begin.algorithms.gem.graphs.GCTimeILGEMTrainer"]], "lcclassilgemtrainer (class in begin.algorithms.gem.links)": [[18, "begin.algorithms.gem.links.LCClassILGEMTrainer"]], "lctaskilgemtrainer (class in begin.algorithms.gem.links)": [[18, "begin.algorithms.gem.links.LCTaskILGEMTrainer"]], "lctimeilgemtrainer (class in begin.algorithms.gem.links)": [[18, "begin.algorithms.gem.links.LCTimeILGEMTrainer"]], "lpdomainilgemtrainer (class in begin.algorithms.gem.links)": [[18, "begin.algorithms.gem.links.LPDomainILGEMTrainer"]], "lptimeilgemtrainer (class in begin.algorithms.gem.links)": [[18, "begin.algorithms.gem.links.LPTimeILGEMTrainer"]], "ncclassilgemminibatchtrainer (class in begin.algorithms.gem.nodes)": [[18, "begin.algorithms.gem.nodes.NCClassILGEMMinibatchTrainer"]], "ncclassilgemtrainer (class in begin.algorithms.gem.nodes)": [[18, "begin.algorithms.gem.nodes.NCClassILGEMTrainer"]], "ncdomainilgemtrainer (class in begin.algorithms.gem.nodes)": [[18, "begin.algorithms.gem.nodes.NCDomainILGEMTrainer"]], "nctaskilgemtrainer (class in begin.algorithms.gem.nodes)": [[18, "begin.algorithms.gem.nodes.NCTaskILGEMTrainer"]], "nctimeilgemtrainer (class in begin.algorithms.gem.nodes)": [[18, "begin.algorithms.gem.nodes.NCTimeILGEMTrainer"]], "afterinference() (gcclassilgemtrainer method)": [[18, "begin.algorithms.gem.graphs.GCClassILGEMTrainer.afterInference"]], "afterinference() (gctaskilgemtrainer method)": [[18, "begin.algorithms.gem.graphs.GCTaskILGEMTrainer.afterInference"]], "afterinference() (lcclassilgemtrainer method)": [[18, "begin.algorithms.gem.links.LCClassILGEMTrainer.afterInference"]], "afterinference() (lctaskilgemtrainer method)": [[18, "begin.algorithms.gem.links.LCTaskILGEMTrainer.afterInference"]], "afterinference() (lctimeilgemtrainer method)": [[18, "begin.algorithms.gem.links.LCTimeILGEMTrainer.afterInference"]], "afterinference() (ncclassilgemminibatchtrainer method)": [[18, "begin.algorithms.gem.nodes.NCClassILGEMMinibatchTrainer.afterInference"]], "afterinference() (ncclassilgemtrainer method)": [[18, "begin.algorithms.gem.nodes.NCClassILGEMTrainer.afterInference"]], "afterinference() (nctaskilgemtrainer method)": [[18, "begin.algorithms.gem.nodes.NCTaskILGEMTrainer.afterInference"]], "beforeinference() (gcclassilgemtrainer method)": [[18, "begin.algorithms.gem.graphs.GCClassILGEMTrainer.beforeInference"]], "beforeinference() (gctaskilgemtrainer method)": [[18, "begin.algorithms.gem.graphs.GCTaskILGEMTrainer.beforeInference"]], "beforeinference() (lcclassilgemtrainer method)": [[18, "begin.algorithms.gem.links.LCClassILGEMTrainer.beforeInference"]], "beforeinference() (lctaskilgemtrainer method)": [[18, "begin.algorithms.gem.links.LCTaskILGEMTrainer.beforeInference"]], "beforeinference() (lctimeilgemtrainer method)": [[18, "begin.algorithms.gem.links.LCTimeILGEMTrainer.beforeInference"]], "beforeinference() (ncclassilgemminibatchtrainer method)": [[18, "begin.algorithms.gem.nodes.NCClassILGEMMinibatchTrainer.beforeInference"]], "beforeinference() (ncclassilgemtrainer method)": [[18, "begin.algorithms.gem.nodes.NCClassILGEMTrainer.beforeInference"]], "beforeinference() (nctaskilgemtrainer method)": [[18, "begin.algorithms.gem.nodes.NCTaskILGEMTrainer.beforeInference"]], "begin.algorithms.gem.graphs": [[18, "module-begin.algorithms.gem.graphs"]], "begin.algorithms.gem.links": [[18, "module-begin.algorithms.gem.links"]], "begin.algorithms.gem.nodes": [[18, "module-begin.algorithms.gem.nodes"]], "inference() (gctaskilgemtrainer method)": [[18, "begin.algorithms.gem.graphs.GCTaskILGEMTrainer.inference"]], "inference() (lctaskilgemtrainer method)": [[18, "begin.algorithms.gem.links.LCTaskILGEMTrainer.inference"]], "inference() (nctaskilgemtrainer method)": [[18, "begin.algorithms.gem.nodes.NCTaskILGEMTrainer.inference"]], "inittrainingstates() (gcclassilgemtrainer method)": [[18, "begin.algorithms.gem.graphs.GCClassILGEMTrainer.initTrainingStates"]], "inittrainingstates() (gctaskilgemtrainer method)": [[18, "begin.algorithms.gem.graphs.GCTaskILGEMTrainer.initTrainingStates"]], "inittrainingstates() (lcclassilgemtrainer method)": [[18, "begin.algorithms.gem.links.LCClassILGEMTrainer.initTrainingStates"]], "inittrainingstates() (lctaskilgemtrainer method)": [[18, "begin.algorithms.gem.links.LCTaskILGEMTrainer.initTrainingStates"]], "inittrainingstates() (lctimeilgemtrainer method)": [[18, "begin.algorithms.gem.links.LCTimeILGEMTrainer.initTrainingStates"]], "inittrainingstates() (lptimeilgemtrainer method)": [[18, "begin.algorithms.gem.links.LPTimeILGEMTrainer.initTrainingStates"]], "inittrainingstates() (ncclassilgemminibatchtrainer method)": [[18, "begin.algorithms.gem.nodes.NCClassILGEMMinibatchTrainer.initTrainingStates"]], "inittrainingstates() (ncclassilgemtrainer method)": [[18, "begin.algorithms.gem.nodes.NCClassILGEMTrainer.initTrainingStates"]], "inittrainingstates() (nctaskilgemtrainer method)": [[18, "begin.algorithms.gem.nodes.NCTaskILGEMTrainer.initTrainingStates"]], "prepareloader() (lctaskilgemtrainer method)": [[18, "begin.algorithms.gem.links.LCTaskILGEMTrainer.prepareLoader"]], "processaftertraining() (gcclassilgemtrainer method)": [[18, "begin.algorithms.gem.graphs.GCClassILGEMTrainer.processAfterTraining"]], "processaftertraining() (gctaskilgemtrainer method)": [[18, "begin.algorithms.gem.graphs.GCTaskILGEMTrainer.processAfterTraining"]], "processaftertraining() (lcclassilgemtrainer method)": [[18, "begin.algorithms.gem.links.LCClassILGEMTrainer.processAfterTraining"]], "processaftertraining() (lctaskilgemtrainer method)": [[18, "begin.algorithms.gem.links.LCTaskILGEMTrainer.processAfterTraining"]], "processaftertraining() (lctimeilgemtrainer method)": [[18, "begin.algorithms.gem.links.LCTimeILGEMTrainer.processAfterTraining"]], "processaftertraining() (lptimeilgemtrainer method)": [[18, "begin.algorithms.gem.links.LPTimeILGEMTrainer.processAfterTraining"]], "processaftertraining() (ncclassilgemminibatchtrainer method)": [[18, "begin.algorithms.gem.nodes.NCClassILGEMMinibatchTrainer.processAfterTraining"]], "processaftertraining() (ncclassilgemtrainer method)": [[18, "begin.algorithms.gem.nodes.NCClassILGEMTrainer.processAfterTraining"]], "processaftertraining() (nctaskilgemtrainer method)": [[18, "begin.algorithms.gem.nodes.NCTaskILGEMTrainer.processAfterTraining"]], "processbeforetraining() (gcclassilgemtrainer method)": [[18, "begin.algorithms.gem.graphs.GCClassILGEMTrainer.processBeforeTraining"]], "processbeforetraining() (gctaskilgemtrainer method)": [[18, "begin.algorithms.gem.graphs.GCTaskILGEMTrainer.processBeforeTraining"]], "processbeforetraining() (lctimeilgemtrainer method)": [[18, "begin.algorithms.gem.links.LCTimeILGEMTrainer.processBeforeTraining"]], "processbeforetraining() (lptimeilgemtrainer method)": [[18, "begin.algorithms.gem.links.LPTimeILGEMTrainer.processBeforeTraining"]], "processevaliteration() (lctimeilgemtrainer method)": [[18, "begin.algorithms.gem.links.LCTimeILGEMTrainer.processEvalIteration"]], "processtrainiteration() (lptimeilgemtrainer method)": [[18, "begin.algorithms.gem.links.LPTimeILGEMTrainer.processTrainIteration"]], "nctaskilhattrainer (class in begin.algorithms.hat.nodes)": [[19, "begin.algorithms.hat.nodes.NCTaskILHATTrainer"]], "afterinference() (nctaskilhattrainer method)": [[19, "begin.algorithms.hat.nodes.NCTaskILHATTrainer.afterInference"]], "begin.algorithms.hat.nodes": [[19, "module-begin.algorithms.hat.nodes"]], "criterion() (nctaskilhattrainer method)": [[19, "begin.algorithms.hat.nodes.NCTaskILHATTrainer.criterion"]], "get_mask() (nctaskilhattrainer method)": [[19, "begin.algorithms.hat.nodes.NCTaskILHATTrainer.get_mask"]], "get_view_for() (nctaskilhattrainer method)": [[19, "begin.algorithms.hat.nodes.NCTaskILHATTrainer.get_view_for"]], "inference() (nctaskilhattrainer method)": [[19, "begin.algorithms.hat.nodes.NCTaskILHATTrainer.inference"]], "inittrainingstates() (nctaskilhattrainer method)": [[19, "begin.algorithms.hat.nodes.NCTaskILHATTrainer.initTrainingStates"]], "processaftertraining() (nctaskilhattrainer method)": [[19, "begin.algorithms.hat.nodes.NCTaskILHATTrainer.processAfterTraining"]], "processbeforetraining() (nctaskilhattrainer method)": [[19, "begin.algorithms.hat.nodes.NCTaskILHATTrainer.processBeforeTraining"]], "processevaliteration() (nctaskilhattrainer method)": [[19, "begin.algorithms.hat.nodes.NCTaskILHATTrainer.processEvalIteration"]], "processtrainiteration() (nctaskilhattrainer method)": [[19, "begin.algorithms.hat.nodes.NCTaskILHATTrainer.processTrainIteration"]], "gcclassillwftrainer (class in begin.algorithms.lwf.graphs)": [[20, "begin.algorithms.lwf.graphs.GCClassILLwFTrainer"]], "gcdomainillwftrainer (class in begin.algorithms.lwf.graphs)": [[20, "begin.algorithms.lwf.graphs.GCDomainILLwFTrainer"]], "gctaskillwftrainer (class in begin.algorithms.lwf.graphs)": [[20, "begin.algorithms.lwf.graphs.GCTaskILLwFTrainer"]], "gctimeillwftrainer (class in begin.algorithms.lwf.graphs)": [[20, "begin.algorithms.lwf.graphs.GCTimeILLwFTrainer"]], "lcclassillwftrainer (class in begin.algorithms.lwf.links)": [[20, "begin.algorithms.lwf.links.LCClassILLwFTrainer"]], "lctaskillwftrainer (class in begin.algorithms.lwf.links)": [[20, "begin.algorithms.lwf.links.LCTaskILLwFTrainer"]], "lctimeillwftrainer (class in begin.algorithms.lwf.links)": [[20, "begin.algorithms.lwf.links.LCTimeILLwFTrainer"]], "lpdomainillwftrainer (class in begin.algorithms.lwf.links)": [[20, "begin.algorithms.lwf.links.LPDomainILLwFTrainer"]], "lptimeillwftrainer (class in begin.algorithms.lwf.links)": [[20, "begin.algorithms.lwf.links.LPTimeILLwFTrainer"]], "ncclassillwfminibatchtrainer (class in begin.algorithms.lwf.nodes)": [[20, "begin.algorithms.lwf.nodes.NCClassILLwFMinibatchTrainer"]], "ncclassillwftrainer (class in begin.algorithms.lwf.nodes)": [[20, "begin.algorithms.lwf.nodes.NCClassILLwFTrainer"]], "ncdomainillwftrainer (class in begin.algorithms.lwf.nodes)": [[20, "begin.algorithms.lwf.nodes.NCDomainILLwFTrainer"]], "nctaskillwftrainer (class in begin.algorithms.lwf.nodes)": [[20, "begin.algorithms.lwf.nodes.NCTaskILLwFTrainer"]], "nctimeillwftrainer (class in begin.algorithms.lwf.nodes)": [[20, "begin.algorithms.lwf.nodes.NCTimeILLwFTrainer"]], "afterinference() (gcclassillwftrainer method)": [[20, "begin.algorithms.lwf.graphs.GCClassILLwFTrainer.afterInference"]], "afterinference() (gctaskillwftrainer method)": [[20, "begin.algorithms.lwf.graphs.GCTaskILLwFTrainer.afterInference"]], "afterinference() (lcclassillwftrainer method)": [[20, "begin.algorithms.lwf.links.LCClassILLwFTrainer.afterInference"]], "afterinference() (lctaskillwftrainer method)": [[20, "begin.algorithms.lwf.links.LCTaskILLwFTrainer.afterInference"]], "afterinference() (lctimeillwftrainer method)": [[20, "begin.algorithms.lwf.links.LCTimeILLwFTrainer.afterInference"]], "afterinference() (ncclassillwfminibatchtrainer method)": [[20, "begin.algorithms.lwf.nodes.NCClassILLwFMinibatchTrainer.afterInference"]], "afterinference() (ncclassillwftrainer method)": [[20, "begin.algorithms.lwf.nodes.NCClassILLwFTrainer.afterInference"]], "afterinference() (nctaskillwftrainer method)": [[20, "begin.algorithms.lwf.nodes.NCTaskILLwFTrainer.afterInference"]], "begin.algorithms.lwf.graphs": [[20, "module-begin.algorithms.lwf.graphs"]], "begin.algorithms.lwf.links": [[20, "module-begin.algorithms.lwf.links"]], "begin.algorithms.lwf.nodes": [[20, "module-begin.algorithms.lwf.nodes"]], "inference() (gctaskillwftrainer method)": [[20, "begin.algorithms.lwf.graphs.GCTaskILLwFTrainer.inference"]], "inference() (lctaskillwftrainer method)": [[20, "begin.algorithms.lwf.links.LCTaskILLwFTrainer.inference"]], "inference() (nctaskillwftrainer method)": [[20, "begin.algorithms.lwf.nodes.NCTaskILLwFTrainer.inference"]], "prepareloader() (lctaskillwftrainer method)": [[20, "begin.algorithms.lwf.links.LCTaskILLwFTrainer.prepareLoader"]], "processaftertraining() (gcclassillwftrainer method)": [[20, "begin.algorithms.lwf.graphs.GCClassILLwFTrainer.processAfterTraining"]], "processaftertraining() (lcclassillwftrainer method)": [[20, "begin.algorithms.lwf.links.LCClassILLwFTrainer.processAfterTraining"]], "processaftertraining() (lctimeillwftrainer method)": [[20, "begin.algorithms.lwf.links.LCTimeILLwFTrainer.processAfterTraining"]], "processaftertraining() (lptimeillwftrainer method)": [[20, "begin.algorithms.lwf.links.LPTimeILLwFTrainer.processAfterTraining"]], "processaftertraining() (ncclassillwfminibatchtrainer method)": [[20, "begin.algorithms.lwf.nodes.NCClassILLwFMinibatchTrainer.processAfterTraining"]], "processaftertraining() (ncclassillwftrainer method)": [[20, "begin.algorithms.lwf.nodes.NCClassILLwFTrainer.processAfterTraining"]], "processbeforetraining() (gctaskillwftrainer method)": [[20, "begin.algorithms.lwf.graphs.GCTaskILLwFTrainer.processBeforeTraining"]], "processbeforetraining() (lctaskillwftrainer method)": [[20, "begin.algorithms.lwf.links.LCTaskILLwFTrainer.processBeforeTraining"]], "processbeforetraining() (lctimeillwftrainer method)": [[20, "begin.algorithms.lwf.links.LCTimeILLwFTrainer.processBeforeTraining"]], "processbeforetraining() (nctaskillwftrainer method)": [[20, "begin.algorithms.lwf.nodes.NCTaskILLwFTrainer.processBeforeTraining"]], "processevaliteration() (lctimeillwftrainer method)": [[20, "begin.algorithms.lwf.links.LCTimeILLwFTrainer.processEvalIteration"]], "processtrainiteration() (lptimeillwftrainer method)": [[20, "begin.algorithms.lwf.links.LPTimeILLwFTrainer.processTrainIteration"]], "gcclassilmastrainer (class in begin.algorithms.mas.graphs)": [[21, "begin.algorithms.mas.graphs.GCClassILMASTrainer"]], "gcdomainilmastrainer (class in begin.algorithms.mas.graphs)": [[21, "begin.algorithms.mas.graphs.GCDomainILMASTrainer"]], "gctaskilmastrainer (class in begin.algorithms.mas.graphs)": [[21, "begin.algorithms.mas.graphs.GCTaskILMASTrainer"]], "gctimeilmastrainer (class in begin.algorithms.mas.graphs)": [[21, "begin.algorithms.mas.graphs.GCTimeILMASTrainer"]], "lcclassilmastrainer (class in begin.algorithms.mas.links)": [[21, "begin.algorithms.mas.links.LCClassILMASTrainer"]], "lctaskilmastrainer (class in begin.algorithms.mas.links)": [[21, "begin.algorithms.mas.links.LCTaskILMASTrainer"]], "lctimeilmastrainer (class in begin.algorithms.mas.links)": [[21, "begin.algorithms.mas.links.LCTimeILMASTrainer"]], "lpdomainilmastrainer (class in begin.algorithms.mas.links)": [[21, "begin.algorithms.mas.links.LPDomainILMASTrainer"]], "lptimeilmastrainer (class in begin.algorithms.mas.links)": [[21, "begin.algorithms.mas.links.LPTimeILMASTrainer"]], "ncclassilmasminibatchtrainer (class in begin.algorithms.mas.nodes)": [[21, "begin.algorithms.mas.nodes.NCClassILMASMinibatchTrainer"]], "ncclassilmastrainer (class in begin.algorithms.mas.nodes)": [[21, "begin.algorithms.mas.nodes.NCClassILMASTrainer"]], "ncdomainilmastrainer (class in begin.algorithms.mas.nodes)": [[21, "begin.algorithms.mas.nodes.NCDomainILMASTrainer"]], "nctaskilmastrainer (class in begin.algorithms.mas.nodes)": [[21, "begin.algorithms.mas.nodes.NCTaskILMASTrainer"]], "nctimeilmastrainer (class in begin.algorithms.mas.nodes)": [[21, "begin.algorithms.mas.nodes.NCTimeILMASTrainer"]], "afterinference() (gcclassilmastrainer method)": [[21, "begin.algorithms.mas.graphs.GCClassILMASTrainer.afterInference"]], "afterinference() (gctaskilmastrainer method)": [[21, "begin.algorithms.mas.graphs.GCTaskILMASTrainer.afterInference"]], "afterinference() (lcclassilmastrainer method)": [[21, "begin.algorithms.mas.links.LCClassILMASTrainer.afterInference"]], "afterinference() (lctaskilmastrainer method)": [[21, "begin.algorithms.mas.links.LCTaskILMASTrainer.afterInference"]], "afterinference() (lctimeilmastrainer method)": [[21, "begin.algorithms.mas.links.LCTimeILMASTrainer.afterInference"]], "afterinference() (ncclassilmasminibatchtrainer method)": [[21, "begin.algorithms.mas.nodes.NCClassILMASMinibatchTrainer.afterInference"]], "afterinference() (ncclassilmastrainer method)": [[21, "begin.algorithms.mas.nodes.NCClassILMASTrainer.afterInference"]], "afterinference() (nctaskilmastrainer method)": [[21, "begin.algorithms.mas.nodes.NCTaskILMASTrainer.afterInference"]], "begin.algorithms.mas.graphs": [[21, "module-begin.algorithms.mas.graphs"]], "begin.algorithms.mas.links": [[21, "module-begin.algorithms.mas.links"]], "begin.algorithms.mas.nodes": [[21, "module-begin.algorithms.mas.nodes"]], "inference() (gctaskilmastrainer method)": [[21, "begin.algorithms.mas.graphs.GCTaskILMASTrainer.inference"]], "inference() (lctaskilmastrainer method)": [[21, "begin.algorithms.mas.links.LCTaskILMASTrainer.inference"]], "inference() (nctaskilmastrainer method)": [[21, "begin.algorithms.mas.nodes.NCTaskILMASTrainer.inference"]], "inittrainingstates() (gcclassilmastrainer method)": [[21, "begin.algorithms.mas.graphs.GCClassILMASTrainer.initTrainingStates"]], "inittrainingstates() (gctaskilmastrainer method)": [[21, "begin.algorithms.mas.graphs.GCTaskILMASTrainer.initTrainingStates"]], "inittrainingstates() (lcclassilmastrainer method)": [[21, "begin.algorithms.mas.links.LCClassILMASTrainer.initTrainingStates"]], "inittrainingstates() (lctaskilmastrainer method)": [[21, "begin.algorithms.mas.links.LCTaskILMASTrainer.initTrainingStates"]], "inittrainingstates() (lctimeilmastrainer method)": [[21, "begin.algorithms.mas.links.LCTimeILMASTrainer.initTrainingStates"]], "inittrainingstates() (lptimeilmastrainer method)": [[21, "begin.algorithms.mas.links.LPTimeILMASTrainer.initTrainingStates"]], "inittrainingstates() (ncclassilmasminibatchtrainer method)": [[21, "begin.algorithms.mas.nodes.NCClassILMASMinibatchTrainer.initTrainingStates"]], "inittrainingstates() (ncclassilmastrainer method)": [[21, "begin.algorithms.mas.nodes.NCClassILMASTrainer.initTrainingStates"]], "inittrainingstates() (nctaskilmastrainer method)": [[21, "begin.algorithms.mas.nodes.NCTaskILMASTrainer.initTrainingStates"]], "prepareloader() (lctaskilmastrainer method)": [[21, "begin.algorithms.mas.links.LCTaskILMASTrainer.prepareLoader"]], "processaftertraining() (gcclassilmastrainer method)": [[21, "begin.algorithms.mas.graphs.GCClassILMASTrainer.processAfterTraining"]], "processaftertraining() (gctaskilmastrainer method)": [[21, "begin.algorithms.mas.graphs.GCTaskILMASTrainer.processAfterTraining"]], "processaftertraining() (lcclassilmastrainer method)": [[21, "begin.algorithms.mas.links.LCClassILMASTrainer.processAfterTraining"]], "processaftertraining() (lctaskilmastrainer method)": [[21, "begin.algorithms.mas.links.LCTaskILMASTrainer.processAfterTraining"]], "processaftertraining() (lctimeilmastrainer method)": [[21, "begin.algorithms.mas.links.LCTimeILMASTrainer.processAfterTraining"]], "processaftertraining() (lptimeilmastrainer method)": [[21, "begin.algorithms.mas.links.LPTimeILMASTrainer.processAfterTraining"]], "processaftertraining() (ncclassilmasminibatchtrainer method)": [[21, "begin.algorithms.mas.nodes.NCClassILMASMinibatchTrainer.processAfterTraining"]], "processaftertraining() (ncclassilmastrainer method)": [[21, "begin.algorithms.mas.nodes.NCClassILMASTrainer.processAfterTraining"]], "processaftertraining() (nctaskilmastrainer method)": [[21, "begin.algorithms.mas.nodes.NCTaskILMASTrainer.processAfterTraining"]], "processbeforetraining() (lctimeilmastrainer method)": [[21, "begin.algorithms.mas.links.LCTimeILMASTrainer.processBeforeTraining"]], "processevaliteration() (lctimeilmastrainer method)": [[21, "begin.algorithms.mas.links.LCTimeILMASTrainer.processEvalIteration"]], "processtrainiteration() (lptimeilmastrainer method)": [[21, "begin.algorithms.mas.links.LPTimeILMASTrainer.processTrainIteration"]], "nctaskilpacknettrainer (class in begin.algorithms.packnet.nodes)": [[22, "begin.algorithms.packnet.nodes.NCTaskILPackNetTrainer"]], "afterinference() (nctaskilpacknettrainer method)": [[22, "begin.algorithms.packnet.nodes.NCTaskILPackNetTrainer.afterInference"]], "begin.algorithms.packnet.nodes": [[22, "module-begin.algorithms.packnet.nodes"]], "inference() (nctaskilpacknettrainer method)": [[22, "begin.algorithms.packnet.nodes.NCTaskILPackNetTrainer.inference"]], "inittrainingstates() (nctaskilpacknettrainer method)": [[22, "begin.algorithms.packnet.nodes.NCTaskILPackNetTrainer.initTrainingStates"]], "processbeforetraining() (nctaskilpacknettrainer method)": [[22, "begin.algorithms.packnet.nodes.NCTaskILPackNetTrainer.processBeforeTraining"]], "processevaliteration() (nctaskilpacknettrainer method)": [[22, "begin.algorithms.packnet.nodes.NCTaskILPackNetTrainer.processEvalIteration"]], "processtrainiteration() (nctaskilpacknettrainer method)": [[22, "begin.algorithms.packnet.nodes.NCTaskILPackNetTrainer.processTrainIteration"]], "nctaskilpiggybacktrainer (class in begin.algorithms.piggyback.nodes)": [[23, "begin.algorithms.piggyback.nodes.NCTaskILPiggybackTrainer"]], "afterinference() (nctaskilpiggybacktrainer method)": [[23, "begin.algorithms.piggyback.nodes.NCTaskILPiggybackTrainer.afterInference"]], "beforeinference() (nctaskilpiggybacktrainer method)": [[23, "begin.algorithms.piggyback.nodes.NCTaskILPiggybackTrainer.beforeInference"]], "begin.algorithms.piggyback.nodes": [[23, "module-begin.algorithms.piggyback.nodes"]], "inference() (nctaskilpiggybacktrainer method)": [[23, "begin.algorithms.piggyback.nodes.NCTaskILPiggybackTrainer.inference"]], "inittrainingstates() (nctaskilpiggybacktrainer method)": [[23, "begin.algorithms.piggyback.nodes.NCTaskILPiggybackTrainer.initTrainingStates"]], "processaftereachiteration() (nctaskilpiggybacktrainer method)": [[23, "begin.algorithms.piggyback.nodes.NCTaskILPiggybackTrainer.processAfterEachIteration"]], "processaftertraining() (nctaskilpiggybacktrainer method)": [[23, "begin.algorithms.piggyback.nodes.NCTaskILPiggybackTrainer.processAfterTraining"]], "processbeforetraining() (nctaskilpiggybacktrainer method)": [[23, "begin.algorithms.piggyback.nodes.NCTaskILPiggybackTrainer.processBeforeTraining"]], "processevaliteration() (nctaskilpiggybacktrainer method)": [[23, "begin.algorithms.piggyback.nodes.NCTaskILPiggybackTrainer.processEvalIteration"]], "gcclassiltwptrainer (class in begin.algorithms.twp.graphs)": [[24, "begin.algorithms.twp.graphs.GCClassILTWPTrainer"]], "gcdomainiltwptrainer (class in begin.algorithms.twp.graphs)": [[24, "begin.algorithms.twp.graphs.GCDomainILTWPTrainer"]], "gctaskiltwptrainer (class in begin.algorithms.twp.graphs)": [[24, "begin.algorithms.twp.graphs.GCTaskILTWPTrainer"]], "gctimeiltwptrainer (class in begin.algorithms.twp.graphs)": [[24, "begin.algorithms.twp.graphs.GCTimeILTWPTrainer"]], "lcclassiltwptrainer (class in begin.algorithms.twp.links)": [[24, "begin.algorithms.twp.links.LCClassILTWPTrainer"]], "lctaskiltwptrainer (class in begin.algorithms.twp.links)": [[24, "begin.algorithms.twp.links.LCTaskILTWPTrainer"]], "lctimeiltwptrainer (class in begin.algorithms.twp.links)": [[24, "begin.algorithms.twp.links.LCTimeILTWPTrainer"]], "lpdomainiltwptrainer (class in begin.algorithms.twp.links)": [[24, "begin.algorithms.twp.links.LPDomainILTWPTrainer"]], "lptimeiltwptrainer (class in begin.algorithms.twp.links)": [[24, "begin.algorithms.twp.links.LPTimeILTWPTrainer"]], "ncclassiltwpminibatchtrainer (class in begin.algorithms.twp.nodes)": [[24, "begin.algorithms.twp.nodes.NCClassILTWPMinibatchTrainer"]], "ncclassiltwptrainer (class in begin.algorithms.twp.nodes)": [[24, "begin.algorithms.twp.nodes.NCClassILTWPTrainer"]], "ncdomainiltwptrainer (class in begin.algorithms.twp.nodes)": [[24, "begin.algorithms.twp.nodes.NCDomainILTWPTrainer"]], "nctaskiltwptrainer (class in begin.algorithms.twp.nodes)": [[24, "begin.algorithms.twp.nodes.NCTaskILTWPTrainer"]], "nctimeiltwptrainer (class in begin.algorithms.twp.nodes)": [[24, "begin.algorithms.twp.nodes.NCTimeILTWPTrainer"]], "afterinference() (gcclassiltwptrainer method)": [[24, "begin.algorithms.twp.graphs.GCClassILTWPTrainer.afterInference"]], "afterinference() (gctaskiltwptrainer method)": [[24, "begin.algorithms.twp.graphs.GCTaskILTWPTrainer.afterInference"]], "afterinference() (lcclassiltwptrainer method)": [[24, "begin.algorithms.twp.links.LCClassILTWPTrainer.afterInference"]], "afterinference() (lctaskiltwptrainer method)": [[24, "begin.algorithms.twp.links.LCTaskILTWPTrainer.afterInference"]], "afterinference() (lctimeiltwptrainer method)": [[24, "begin.algorithms.twp.links.LCTimeILTWPTrainer.afterInference"]], "afterinference() (ncclassiltwpminibatchtrainer method)": [[24, "begin.algorithms.twp.nodes.NCClassILTWPMinibatchTrainer.afterInference"]], "afterinference() (ncclassiltwptrainer method)": [[24, "begin.algorithms.twp.nodes.NCClassILTWPTrainer.afterInference"]], "afterinference() (nctaskiltwptrainer method)": [[24, "begin.algorithms.twp.nodes.NCTaskILTWPTrainer.afterInference"]], "begin.algorithms.twp.graphs": [[24, "module-begin.algorithms.twp.graphs"]], "begin.algorithms.twp.links": [[24, "module-begin.algorithms.twp.links"]], "begin.algorithms.twp.nodes": [[24, "module-begin.algorithms.twp.nodes"]], "inference() (gcclassiltwptrainer method)": [[24, "begin.algorithms.twp.graphs.GCClassILTWPTrainer.inference"]], "inference() (gctaskiltwptrainer method)": [[24, "begin.algorithms.twp.graphs.GCTaskILTWPTrainer.inference"]], "inference() (lcclassiltwptrainer method)": [[24, "begin.algorithms.twp.links.LCClassILTWPTrainer.inference"]], "inference() (lctaskiltwptrainer method)": [[24, "begin.algorithms.twp.links.LCTaskILTWPTrainer.inference"]], "inference() (lctimeiltwptrainer method)": [[24, "begin.algorithms.twp.links.LCTimeILTWPTrainer.inference"]], "inference() (ncclassiltwpminibatchtrainer method)": [[24, "begin.algorithms.twp.nodes.NCClassILTWPMinibatchTrainer.inference"]], "inference() (ncclassiltwptrainer method)": [[24, "begin.algorithms.twp.nodes.NCClassILTWPTrainer.inference"]], "inference() (nctaskiltwptrainer method)": [[24, "begin.algorithms.twp.nodes.NCTaskILTWPTrainer.inference"]], "inittrainingstates() (gcclassiltwptrainer method)": [[24, "begin.algorithms.twp.graphs.GCClassILTWPTrainer.initTrainingStates"]], "inittrainingstates() (gctaskiltwptrainer method)": [[24, "begin.algorithms.twp.graphs.GCTaskILTWPTrainer.initTrainingStates"]], "inittrainingstates() (lcclassiltwptrainer method)": [[24, "begin.algorithms.twp.links.LCClassILTWPTrainer.initTrainingStates"]], "inittrainingstates() (lctaskiltwptrainer method)": [[24, "begin.algorithms.twp.links.LCTaskILTWPTrainer.initTrainingStates"]], "inittrainingstates() (lctimeiltwptrainer method)": [[24, "begin.algorithms.twp.links.LCTimeILTWPTrainer.initTrainingStates"]], "inittrainingstates() (lptimeiltwptrainer method)": [[24, "begin.algorithms.twp.links.LPTimeILTWPTrainer.initTrainingStates"]], "inittrainingstates() (ncclassiltwpminibatchtrainer method)": [[24, "begin.algorithms.twp.nodes.NCClassILTWPMinibatchTrainer.initTrainingStates"]], "inittrainingstates() (ncclassiltwptrainer method)": [[24, "begin.algorithms.twp.nodes.NCClassILTWPTrainer.initTrainingStates"]], "inittrainingstates() (nctaskiltwptrainer method)": [[24, "begin.algorithms.twp.nodes.NCTaskILTWPTrainer.initTrainingStates"]], "prepareloader() (lctaskiltwptrainer method)": [[24, "begin.algorithms.twp.links.LCTaskILTWPTrainer.prepareLoader"]], "processaftertraining() (gcclassiltwptrainer method)": [[24, "begin.algorithms.twp.graphs.GCClassILTWPTrainer.processAfterTraining"]], "processaftertraining() (gctaskiltwptrainer method)": [[24, "begin.algorithms.twp.graphs.GCTaskILTWPTrainer.processAfterTraining"]], "processaftertraining() (lcclassiltwptrainer method)": [[24, "begin.algorithms.twp.links.LCClassILTWPTrainer.processAfterTraining"]], "processaftertraining() (lctaskiltwptrainer method)": [[24, "begin.algorithms.twp.links.LCTaskILTWPTrainer.processAfterTraining"]], "processaftertraining() (lctimeiltwptrainer method)": [[24, "begin.algorithms.twp.links.LCTimeILTWPTrainer.processAfterTraining"]], "processaftertraining() (lptimeiltwptrainer method)": [[24, "begin.algorithms.twp.links.LPTimeILTWPTrainer.processAfterTraining"]], "processaftertraining() (ncclassiltwpminibatchtrainer method)": [[24, "begin.algorithms.twp.nodes.NCClassILTWPMinibatchTrainer.processAfterTraining"]], "processaftertraining() (ncclassiltwptrainer method)": [[24, "begin.algorithms.twp.nodes.NCClassILTWPTrainer.processAfterTraining"]], "processaftertraining() (nctaskiltwptrainer method)": [[24, "begin.algorithms.twp.nodes.NCTaskILTWPTrainer.processAfterTraining"]], "processbeforetraining() (lctimeiltwptrainer method)": [[24, "begin.algorithms.twp.links.LCTimeILTWPTrainer.processBeforeTraining"]], "processevaliteration() (lctimeiltwptrainer method)": [[24, "begin.algorithms.twp.links.LCTimeILTWPTrainer.processEvalIteration"]], "processtrainiteration() (lptimeiltwptrainer method)": [[24, "begin.algorithms.twp.links.LPTimeILTWPTrainer.processTrainIteration"]], "accuracyevaluator (class in begin.evaluators)": [[26, "begin.evaluators.AccuracyEvaluator"]], "baseevaluator (class in begin.evaluators)": [[26, "begin.evaluators.BaseEvaluator"]], "hitsevaluator (class in begin.evaluators)": [[26, "begin.evaluators.HitsEvaluator"]], "rocaucevaluator (class in begin.evaluators)": [[26, "begin.evaluators.ROCAUCEvaluator"]], "simple_eval() (accuracyevaluator method)": [[26, "begin.evaluators.AccuracyEvaluator.simple_eval"]], "simple_eval() (baseevaluator method)": [[26, "begin.evaluators.BaseEvaluator.simple_eval"]], "simple_eval() (hitsevaluator method)": [[26, "begin.evaluators.HitsEvaluator.simple_eval"]], "simple_eval() (rocaucevaluator method)": [[26, "begin.evaluators.ROCAUCEvaluator.simple_eval"]], "adaptivelinear (class in begin.utils)": [[27, "begin.utils.AdaptiveLinear"]], "forward() (adaptivelinear method)": [[27, "begin.utils.AdaptiveLinear.forward"]], "get_output_mask() (adaptivelinear method)": [[27, "begin.utils.AdaptiveLinear.get_output_mask"]], "observe_outputs() (adaptivelinear method)": [[27, "begin.utils.AdaptiveLinear.observe_outputs"]]}})